{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _webgltextureLoader = require(\"webgltexture-loader\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nclass CanvasTextureLoader extends _webgltextureLoader.WebGLTextureLoaderSyncHashCache {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"disposes\", {});\n  }\n\n  canLoad(input) {\n    return input instanceof HTMLCanvasElement;\n  }\n\n  inputHash(input) {\n    return input;\n  }\n\n  getNoCache(input) {\n    const gl = this.gl;\n    const width = input.width,\n          height = input.height;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n    return {\n      texture,\n      width,\n      height\n    };\n  }\n\n  update(input) {\n    const gl = this.gl;\n\n    const _this$get = this.get(input),\n          texture = _this$get.texture;\n\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n  }\n\n}\n\n_webgltextureLoader.globalRegistry.add(CanvasTextureLoader);\n\nvar _default = CanvasTextureLoader;\nexports.default = _default;","map":{"version":3,"sources":["../src/CanvasTextureLoader.js"],"names":["WebGLTextureLoaderSyncHashCache","canLoad","input","inputHash","getNoCache","gl","height","texture","update","globalRegistry","CanvasTextureLoader"],"mappings":";;;;;;;AACA,IAAA,mBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;;;;;;;;;;;;;;AAKA,MAAA,mBAAA,SAAkCA,mBAAAA,CAAlC,+BAAA,CAEE;AAAA,EAAA,WAAA,CAAA,GAAA,IAAA,EAAA;AAAA,UAAA,GAAA,IAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA,CAAA;AAAA;;AAGAC,EAAAA,OAAO,CAAA,KAAA,EAAa;AAClB,WAAOC,KAAK,YAAZ,iBAAA;AACD;;AAEDC,EAAAA,SAAS,CAAA,KAAA,EAA2B;AAClC,WAAA,KAAA;AACD;;AAEDC,EAAAA,UAAU,CAAA,KAAA,EAA2B;AAAA,UAC3BC,EAD2B,GACnC,IADmC,CAC3BA,EAD2B;AAAA,UAE7B,KAF6B,GAEnC,KAFmC,CAE7B,KAF6B;AAAA,UAEpBC,MAFoB,GAEnC,KAFmC,CAEpBA,MAFoB;AAGnC,UAAMC,OAAO,GAAGF,EAAE,CAAlB,aAAgBA,EAAhB;AACAA,IAAAA,EAAE,CAAFA,WAAAA,CAAeA,EAAE,CAAjBA,UAAAA,EAAAA,OAAAA;AACAA,IAAAA,EAAE,CAAFA,UAAAA,CAAcA,EAAE,CAAhBA,UAAAA,EAAAA,CAAAA,EAAgCA,EAAE,CAAlCA,IAAAA,EAAyCA,EAAE,CAA3CA,IAAAA,EAAkDA,EAAE,CAApDA,aAAAA,EAAAA,KAAAA;AACA,WAAO;AAAA,MAAA,OAAA;AAAA,MAAA,KAAA;AAAkBC,MAAAA;AAAlB,KAAP;AACD;;AAEDE,EAAAA,MAAM,CAAA,KAAA,EAA2B;AAAA,UACvBH,EADuB,GAC/B,IAD+B,CACvBA,EADuB;;AAAA,sBAEX,KAAA,GAAA,CAApB,KAAoB,CAFW;AAAA,UAEvBE,OAFuB,aAEvBA,OAFuB;;AAG/BF,IAAAA,EAAE,CAAFA,WAAAA,CAAeA,EAAE,CAAjBA,UAAAA,EAAAA,OAAAA;AACAA,IAAAA,EAAE,CAAFA,UAAAA,CAAcA,EAAE,CAAhBA,UAAAA,EAAAA,CAAAA,EAAgCA,EAAE,CAAlCA,IAAAA,EAAyCA,EAAE,CAA3CA,IAAAA,EAAkDA,EAAE,CAApDA,aAAAA,EAAAA,KAAAA;AACD;;AAzBD;;AA4BFI,mBAAAA,CAAAA,cAAAA,CAAAA,GAAAA,CAAAA,mBAAAA;;eAEeC,mB","sourcesContent":["//@flow\nimport {\n  WebGLTextureLoaderSyncHashCache,\n  globalRegistry\n} from \"webgltexture-loader\";\n\nclass CanvasTextureLoader extends WebGLTextureLoaderSyncHashCache<\n  HTMLCanvasElement\n> {\n  disposes = {};\n\n  canLoad(input: any) {\n    return input instanceof HTMLCanvasElement;\n  }\n\n  inputHash(input: HTMLCanvasElement) {\n    return input;\n  }\n\n  getNoCache(input: HTMLCanvasElement) {\n    const { gl } = this;\n    const { width, height } = input;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n    return { texture, width, height };\n  }\n\n  update(input: HTMLCanvasElement) {\n    const { gl } = this;\n    const { texture } = this.get(input);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, input);\n  }\n}\n\nglobalRegistry.add(CanvasTextureLoader);\n\nexport default CanvasTextureLoader;\n"]},"metadata":{},"sourceType":"script"}