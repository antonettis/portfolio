{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/serenaantonetti/portfolio-2019/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _log = _interopRequireDefault(require(\"./helpers/log\"));\n\nvar _Visitor = _interopRequireDefault(require(\"./Visitor\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nconst aggregateInfo = info => Array.isArray(info) ? info.reduce((acc, info) => acc.concat(aggregateInfo(info)), []) : [String(info.dependency && info.dependency.getGLName() || info.initialObj)].concat(info.textureOptions ? [info.textureOptions] : []);\n/**\n *\n */\n\n\nclass VisitorLogger extends _Visitor.default {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"groupNestedLvl\", 0);\n  }\n\n  onSurfaceGLContextChange(surface, gl) {\n    if (gl) {\n      (0, _log.default)(surface.getGLName() + \" _context acquired_\");\n    } else {\n      (0, _log.default)(surface.getGLName() + \" _context lost_\");\n    }\n  }\n\n  onSurfaceDrawSkipped() {}\n\n  onSurfaceDrawStart(surface) {\n    const _surface$getGLSize = surface.getGLSize(),\n          _surface$getGLSize2 = _slicedToArray(_surface$getGLSize, 2),\n          width = _surface$getGLSize2[0],\n          height = _surface$getGLSize2[1];\n\n    console.groupCollapsed(\"Surface draw\");\n    this.groupNestedLvl = 1;\n    (0, _log.default)(\"_size_ `\" + width + \"`x`\" + height + \"`\");\n  }\n\n  onSurfaceDrawError(e) {\n    console.error(e);\n\n    while (this.groupNestedLvl > 0) {\n      console.groupEnd();\n      this.groupNestedLvl--;\n    }\n\n    return true;\n  }\n\n  onSurfaceDrawEnd() {\n    this.groupNestedLvl--;\n    console.groupEnd();\n  }\n\n  onNodeDrawSkipped(node) {\n    (0, _log.default)(node.getGLName() + \" redraw _skipped_: \" + (!node.context.glSurface.gl ? \"no gl context available!\" : !node._needsRedraw ? \"no need to redraw\" : \"\"));\n  }\n\n  onNodeDrawStart(node) {\n    this.groupNestedLvl++;\n    console.group(node.getGLName());\n  }\n\n  onNodeSyncDeps(node, additions, deletions) {\n    if (additions.length) console.log(node.getGLName() + \" +deps \" + additions.map(n => n.getGLName()).join(\", \"));\n    if (deletions.length) console.log(node.getGLName() + \" -deps \" + additions.map(n => n.getGLName()).join(\", \"));\n  }\n\n  onNodeDraw(node, preparedUniforms) {\n    const _node$props = node.props,\n          blendFunc = _node$props.blendFunc,\n          clear = _node$props.clear;\n    this.groupNestedLvl++;\n    console.group(\"DRAW \" + node.getGLName());\n\n    const _node$getGLSize = node.getGLSize(),\n          _node$getGLSize2 = _slicedToArray(_node$getGLSize, 2),\n          w = _node$getGLSize2[0],\n          h = _node$getGLSize2[1];\n\n    (0, _log.default)(\"_size_ `\" + w + \"`x`\" + h + \"` \" + \"_clear_ `\" + JSON.stringify(clear) + \"` \" + \"_blendFunc_ `\" + JSON.stringify(blendFunc) + \"`\");\n    (0, _log.default)(\"_\" + preparedUniforms.length + \" uniforms:_\");\n    preparedUniforms.forEach(obj => {\n      let key = obj.key,\n          type = obj.type,\n          value = obj.value,\n          getMetaInfo = obj.getMetaInfo;\n      type = String(type || \"UNKNOWN\");\n      const values = value === undefined ? \"\" : Array.isArray(value) ? \"[\" + value.map(v => \"`\" + String(v) + \"`\").join(\",\") + \"]\" : \"`\" + String(value) + \"`\";\n      let spaces = \"\";\n\n      for (let i = type.length + key.length - 18; i < 0; i++) {\n        spaces += \" \";\n      }\n\n      (0, _log.default)(`${spaces}*${type === \"UNKNOWN\" ? \"[c='color:red']UNKNOWN[c]\" : type}* _${key}_ = ${values}`, ...(getMetaInfo ? aggregateInfo(getMetaInfo()) : []));\n    });\n  }\n\n  onNodeDrawEnd() {\n    this.groupNestedLvl -= 2;\n    console.groupEnd();\n    console.groupEnd();\n  }\n\n}\n\nexports.default = VisitorLogger;","map":{"version":3,"sources":["../src/VisitorLogger.js"],"names":["aggregateInfo","info","Array","acc","String","Visitor","onSurfaceGLContextChange","surface","onSurfaceDrawSkipped","onSurfaceDrawStart","console","onSurfaceDrawError","onSurfaceDrawEnd","onNodeDrawSkipped","node","onNodeDrawStart","onNodeSyncDeps","additions","n","deletions","onNodeDraw","clear","JSON","preparedUniforms","obj","getMetaInfo","type","values","value","v","spaces","i","key","onNodeDrawEnd"],"mappings":"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","sourcesContent":["//@flow\n/* eslint-disable no-console */\nimport log from \"./helpers/log\";\nimport type { Surface } from \"./createSurface\";\nimport type Node from \"./Node\";\nimport type Bus from \"./Bus\";\nimport Visitor from \"./Visitor\";\n\nconst aggregateInfo = info =>\n  Array.isArray(info)\n    ? info.reduce((acc, info) => acc.concat(aggregateInfo(info)), [])\n    : [\n        String(\n          (info.dependency && info.dependency.getGLName()) || info.initialObj\n        )\n      ].concat(info.textureOptions ? [info.textureOptions] : []);\n\n/**\n *\n */\nexport default class VisitorLogger extends Visitor {\n  groupNestedLvl = 0;\n  onSurfaceGLContextChange(surface: Surface, gl: ?WebGLRenderingContext) {\n    if (gl) {\n      log(surface.getGLName() + \" _context acquired_\");\n    } else {\n      log(surface.getGLName() + \" _context lost_\");\n    }\n  }\n  onSurfaceDrawSkipped() {}\n  onSurfaceDrawStart(surface: Surface) {\n    const [width, height] = surface.getGLSize();\n    console.groupCollapsed(\"Surface draw\");\n    this.groupNestedLvl = 1;\n    log(\"_size_ `\" + width + \"`x`\" + height + \"`\");\n  }\n  onSurfaceDrawError(e: Error) {\n    console.error(e);\n    while (this.groupNestedLvl > 0) {\n      console.groupEnd();\n      this.groupNestedLvl--;\n    }\n    return true;\n  }\n  onSurfaceDrawEnd() {\n    this.groupNestedLvl--;\n    console.groupEnd();\n  }\n  onNodeDrawSkipped(node: Node) {\n    log(\n      node.getGLName() +\n        \" redraw _skipped_: \" +\n        (!node.context.glSurface.gl\n          ? \"no gl context available!\"\n          : !node._needsRedraw ? \"no need to redraw\" : \"\")\n    );\n  }\n  onNodeDrawStart(node: Node) {\n    this.groupNestedLvl++;\n    console.group(node.getGLName());\n  }\n  onNodeSyncDeps(\n    node: Node,\n    additions: Array<Bus | Node>,\n    deletions: Array<Bus | Node>\n  ) {\n    if (additions.length)\n      console.log(\n        node.getGLName() +\n          \" +deps \" +\n          additions.map(n => n.getGLName()).join(\", \")\n      );\n    if (deletions.length)\n      console.log(\n        node.getGLName() +\n          \" -deps \" +\n          additions.map(n => n.getGLName()).join(\", \")\n      );\n  }\n  onNodeDraw(node: Node, preparedUniforms: Array<*>) {\n    const { blendFunc, clear } = node.props;\n    this.groupNestedLvl++;\n    console.group(\"DRAW \" + node.getGLName());\n    const [w, h] = node.getGLSize();\n    log(\n      \"_size_ `\" +\n        w +\n        \"`x`\" +\n        h +\n        \"` \" +\n        \"_clear_ `\" +\n        JSON.stringify(clear) +\n        \"` \" +\n        \"_blendFunc_ `\" +\n        JSON.stringify(blendFunc) +\n        \"`\"\n    );\n    log(\"_\" + preparedUniforms.length + \" uniforms:_\");\n    preparedUniforms.forEach(obj => {\n      let { key, type, value, getMetaInfo } = obj;\n      type = String(type || \"UNKNOWN\");\n      const values =\n        value === undefined\n          ? \"\"\n          : Array.isArray(value)\n            ? \"[\" + value.map(v => \"`\" + String(v) + \"`\").join(\",\") + \"]\"\n            : \"`\" + String(value) + \"`\";\n      let spaces = \"\";\n      for (let i = type.length + key.length - 18; i < 0; i++) {\n        spaces += \" \";\n      }\n      log(\n        `${spaces}*${type === \"UNKNOWN\"\n          ? \"[c='color:red']UNKNOWN[c]\"\n          : type}* _${key}_ = ${values}`,\n        ...(getMetaInfo ? aggregateInfo(getMetaInfo()) : [])\n      );\n    });\n  }\n  onNodeDrawEnd() {\n    this.groupNestedLvl -= 2;\n    console.groupEnd();\n    console.groupEnd();\n  }\n}\n"]},"metadata":{},"sourceType":"script"}