{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/Sketch.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { gsap, TimelineMax, Power2, MotionPathPlugin } from \"gsap/all\";\nimport * as dat from \"dat.gui\";\n\nclass Sketch extends Component {\n  constructor(opts) {\n    super(opts);\n    this.scene = new THREE.Scene();\n    this.vertex = `varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}`;\n    this.fragment = opts.fragment;\n    this.uniforms = opts.uniforms;\n    this.renderer = new THREE.WebGLRenderer();\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.duration = opts.duration || 1;\n    this.debug = opts.debug || false;\n    this.easing = opts.easing || \"easeInOut\";\n    this.clicker = document.getElementById(\"content\");\n    this.container = document.getElementById(\"slider\");\n    this.images = JSON.parse(this.container.getAttribute(\"data-images\"));\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.container.appendChild(this.renderer.domElement);\n    this.camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 1000);\n    this.camera.position.set(0, 0, 2);\n    this.time = 0;\n    this.current = 0;\n    this.textures = [];\n    this.paused = true;\n    this.initiate(() => {\n      console.log(this.textures);\n      this.setupResize();\n      this.settings();\n      this.addObjects();\n      this.resize();\n      this.clickEvent();\n      this.play();\n    });\n  }\n\n  componentDidMount() {}\n\n  initiate(cb) {\n    const promises = [];\n    let that = this;\n    this.images.forEach((url, i) => {\n      let promise = new Promise(resolve => {\n        that.textures[i] = new THREE.TextureLoader().load(url, resolve);\n      });\n      promises.push(promise);\n    });\n    Promise.all(promises).then(() => {\n      cb();\n    });\n  }\n\n  clickEvent() {\n    this.clicker.addEventListener(\"click\", () => {\n      this.next();\n    });\n  }\n\n  settings() {\n    let that = this;\n    if (this.debug) this.gui = new dat.GUI();\n    this.settings = {\n      progress: 0.5\n    }; // if(this.debug) this.gui.add(this.settings, \"progress\", 0, 1, 0.01);\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.settings[item] = this.uniforms[item].value;\n      if (this.debug) this.gui.add(this.settings, item, this.uniforms[item].min, this.uniforms[item].max, 0.01);\n    });\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height; // image cover\n\n    this.imageAspect = this.textures[0].image.height / this.textures[0].image.width;\n    let a1;\n    let a2;\n\n    if (this.height / this.width > this.imageAspect) {\n      a1 = this.width / this.height * this.imageAspect;\n      a2 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n\n    this.material.uniforms.resolution.value.x = this.width;\n    this.material.uniforms.resolution.value.y = this.height;\n    this.material.uniforms.resolution.value.z = a1;\n    this.material.uniforms.resolution.value.w = a2;\n    const dist = this.camera.position.z;\n    const height = 1;\n    this.camera.fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * dist));\n    this.plane.scale.x = this.camera.aspect;\n    this.plane.scale.y = 1;\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\"\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: {\n          type: \"f\",\n          value: 0\n        },\n        progress: {\n          type: \"f\",\n          value: 0\n        },\n        border: {\n          type: \"f\",\n          value: 0\n        },\n        intensity: {\n          type: \"f\",\n          value: 0\n        },\n        scaleX: {\n          type: \"f\",\n          value: 40\n        },\n        scaleY: {\n          type: \"f\",\n          value: 40\n        },\n        transition: {\n          type: \"f\",\n          value: 40\n        },\n        swipe: {\n          type: \"f\",\n          value: 0\n        },\n        width: {\n          type: \"f\",\n          value: 0\n        },\n        radius: {\n          type: \"f\",\n          value: 0\n        },\n        texture1: {\n          type: \"f\",\n          value: this.textures[0]\n        },\n        texture2: {\n          type: \"f\",\n          value: this.textures[1]\n        },\n        displacement: {\n          type: \"f\",\n          value: new THREE.TextureLoader().load(\"../img/disp1.jpg\")\n        },\n        resolution: {\n          type: \"v4\",\n          value: new THREE.Vector4()\n        }\n      },\n      // wireframe: true,\n      vertexShader: this.vertex,\n      fragmentShader: this.fragment\n    });\n    this.geometry = new THREE.PlaneGeometry(1, 1, 2, 2);\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.plane);\n  }\n\n  stop() {\n    this.paused = true;\n  }\n\n  play() {\n    this.paused = false;\n    this.render();\n  }\n\n  next() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    let len = this.textures.length;\n    let nextTexture = this.textures[(this.current + 1) % len];\n    this.material.uniforms.texture2.value = nextTexture;\n    let tl = new TimelineMax();\n    tl.to(this.material.uniforms.progress, this.duration, {\n      value: 1,\n      ease: Power2[this.easing],\n      onComplete: () => {\n        console.log(\"FINISH\");\n        this.current = (this.current + 1) % len;\n        this.material.uniforms.texture1.value = nextTexture;\n        this.material.uniforms.progress.value = 0;\n        this.isRunning = false;\n      }\n    });\n  }\n\n  render() {\n    if (this.paused) return;\n    this.time += 0.05;\n    this.material.uniforms.time.value = this.time; // this.material.uniforms.progress.value = this.settings.progress;\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.material.uniforms[item].value = this.settings[item];\n    }); // this.camera.position.z = 3;\n    // this.plane.rotation.y = 0.4*Math.sin(this.time)\n    // this.plane.rotation.x = 0.5*Math.sin(0.4*this.time)\n\n    requestAnimationFrame(this.render.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"content\",\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"slider\",\n      \"data-images\": \"[ \\\"../img/la-princiere.jpg\\\", \\\"LaPrinciere5.jpg\\\", \\\"LaPrinciere3.jpg\\\", \\\"LaPrinciere4.jpg\\\", \\\"LaPrinciere-Web1.jpg\\\", \\\"LaPrinciere-Web5.jpg\\\", \\\"LaPrinciere-Web4.jpg\\\", \\\"LaPrinciere-Web3.jpg\\\" ]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Sketch;","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/Sketch.js"],"names":["React","Component","THREE","gsap","TimelineMax","Power2","MotionPathPlugin","dat","Sketch","constructor","opts","scene","Scene","vertex","fragment","uniforms","renderer","WebGLRenderer","width","window","innerWidth","height","innerHeight","setPixelRatio","devicePixelRatio","setSize","setClearColor","duration","debug","easing","clicker","document","getElementById","container","images","JSON","parse","getAttribute","offsetWidth","offsetHeight","appendChild","domElement","camera","PerspectiveCamera","position","set","time","current","textures","paused","initiate","console","log","setupResize","settings","addObjects","resize","clickEvent","play","componentDidMount","cb","promises","that","forEach","url","i","promise","Promise","resolve","TextureLoader","load","push","all","then","addEventListener","next","gui","GUI","progress","Object","keys","item","value","add","min","max","bind","aspect","imageAspect","image","a1","a2","material","resolution","x","y","z","w","dist","fov","Math","PI","atan","plane","scale","updateProjectionMatrix","ShaderMaterial","extensions","derivatives","side","DoubleSide","type","border","intensity","scaleX","scaleY","transition","swipe","radius","texture1","texture2","displacement","Vector4","vertexShader","fragmentShader","geometry","PlaneGeometry","Mesh","stop","render","isRunning","len","length","nextTexture","tl","to","ease","onComplete","requestAnimationFrame"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,MAA5B,EAAoCC,gBAApC,QAA4D,UAA5D;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;;AAEA,MAAMC,MAAN,SAAqBP,SAArB,CAA+B;AAC7BQ,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAMA,IAAN;AACA,SAAKC,KAAL,GAAa,IAAIT,KAAK,CAACU,KAAV,EAAb;AACA,SAAKC,MAAL,GAAe,mHAAf;AACA,SAAKC,QAAL,GAAgBJ,IAAI,CAACI,QAArB;AACA,SAAKC,QAAL,GAAgBL,IAAI,CAACK,QAArB;AACA,SAAKC,QAAL,GAAgB,IAAId,KAAK,CAACe,aAAV,EAAhB;AACA,SAAKC,KAAL,GAAaC,MAAM,CAACC,UAApB;AACA,SAAKC,MAAL,GAAcF,MAAM,CAACG,WAArB;AACA,SAAKN,QAAL,CAAcO,aAAd,CAA4BJ,MAAM,CAACK,gBAAnC;AACA,SAAKR,QAAL,CAAcS,OAAd,CAAsB,KAAKP,KAA3B,EAAkC,KAAKG,MAAvC;AACA,SAAKL,QAAL,CAAcU,aAAd,CAA4B,QAA5B,EAAsC,CAAtC;AACA,SAAKC,QAAL,GAAgBjB,IAAI,CAACiB,QAAL,IAAiB,CAAjC;AACA,SAAKC,KAAL,GAAalB,IAAI,CAACkB,KAAL,IAAc,KAA3B;AACA,SAAKC,MAAL,GAAcnB,IAAI,CAACmB,MAAL,IAAe,WAA7B;AAEA,SAAKC,OAAL,GAAeC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAf;AAEA,SAAKC,SAAL,GAAiBF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAjB;AACA,SAAKE,MAAL,GAAcC,IAAI,CAACC,KAAL,CAAW,KAAKH,SAAL,CAAeI,YAAf,CAA4B,aAA5B,CAAX,CAAd;AACA,SAAKnB,KAAL,GAAa,KAAKe,SAAL,CAAeK,WAA5B;AACA,SAAKjB,MAAL,GAAc,KAAKY,SAAL,CAAeM,YAA7B;AACA,SAAKN,SAAL,CAAeO,WAAf,CAA2B,KAAKxB,QAAL,CAAcyB,UAAzC;AAEA,SAAKC,MAAL,GAAc,IAAIxC,KAAK,CAACyC,iBAAV,CACZ,EADY,EAEZxB,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACG,WAFf,EAGZ,KAHY,EAIZ,IAJY,CAAd;AAOA,SAAKoB,MAAL,CAAYE,QAAZ,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,MAAL,GAAc,IAAd;AACA,SAAKC,QAAL,CAAc,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,QAAjB;AACA,WAAKK,WAAL;AACA,WAAKC,QAAL;AACA,WAAKC,UAAL;AACA,WAAKC,MAAL;AACA,WAAKC,UAAL;AACA,WAAKC,IAAL;AACD,KARD;AASD;;AAEDC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBT,EAAAA,QAAQ,CAACU,EAAD,EAAK;AACX,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,SAAK5B,MAAL,CAAY6B,OAAZ,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC9B,UAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACnCN,QAAAA,IAAI,CAACd,QAAL,CAAciB,CAAd,IAAmB,IAAI/D,KAAK,CAACmE,aAAV,GAA0BC,IAA1B,CAA+BN,GAA/B,EAAoCI,OAApC,CAAnB;AACD,OAFa,CAAd;AAGAP,MAAAA,QAAQ,CAACU,IAAT,CAAcL,OAAd;AACD,KALD;AAOAC,IAAAA,OAAO,CAACK,GAAR,CAAYX,QAAZ,EAAsBY,IAAtB,CAA2B,MAAM;AAC/Bb,MAAAA,EAAE;AACH,KAFD;AAGD;;AAEDH,EAAAA,UAAU,GAAG;AACX,SAAK3B,OAAL,CAAa4C,gBAAb,CAA8B,OAA9B,EAAuC,MAAM;AAC3C,WAAKC,IAAL;AACD,KAFD;AAGD;;AAEDrB,EAAAA,QAAQ,GAAG;AACT,QAAIQ,IAAI,GAAG,IAAX;AACA,QAAI,KAAKlC,KAAT,EAAgB,KAAKgD,GAAL,GAAW,IAAIrE,GAAG,CAACsE,GAAR,EAAX;AAChB,SAAKvB,QAAL,GAAgB;AAAEwB,MAAAA,QAAQ,EAAE;AAAZ,KAAhB,CAHS,CAIT;;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKjE,QAAjB,EAA2BgD,OAA3B,CAAmCkB,IAAI,IAAI;AACzC,WAAK3B,QAAL,CAAc2B,IAAd,IAAsB,KAAKlE,QAAL,CAAckE,IAAd,EAAoBC,KAA1C;AACA,UAAI,KAAKtD,KAAT,EACE,KAAKgD,GAAL,CAASO,GAAT,CACE,KAAK7B,QADP,EAEE2B,IAFF,EAGE,KAAKlE,QAAL,CAAckE,IAAd,EAAoBG,GAHtB,EAIE,KAAKrE,QAAL,CAAckE,IAAd,EAAoBI,GAJtB,EAKE,IALF;AAOH,KAVD;AAWD;;AAEDhC,EAAAA,WAAW,GAAG;AACZlC,IAAAA,MAAM,CAACuD,gBAAP,CAAwB,QAAxB,EAAkC,KAAKlB,MAAL,CAAY8B,IAAZ,CAAiB,IAAjB,CAAlC;AACD;;AAED9B,EAAAA,MAAM,GAAG;AACP,SAAKtC,KAAL,GAAa,KAAKe,SAAL,CAAeK,WAA5B;AACA,SAAKjB,MAAL,GAAc,KAAKY,SAAL,CAAeM,YAA7B;AACA,SAAKvB,QAAL,CAAcS,OAAd,CAAsB,KAAKP,KAA3B,EAAkC,KAAKG,MAAvC;AACA,SAAKqB,MAAL,CAAY6C,MAAZ,GAAqB,KAAKrE,KAAL,GAAa,KAAKG,MAAvC,CAJO,CAMP;;AACA,SAAKmE,WAAL,GACE,KAAKxC,QAAL,CAAc,CAAd,EAAiByC,KAAjB,CAAuBpE,MAAvB,GAAgC,KAAK2B,QAAL,CAAc,CAAd,EAAiByC,KAAjB,CAAuBvE,KADzD;AAEA,QAAIwE,EAAJ;AACA,QAAIC,EAAJ;;AACA,QAAI,KAAKtE,MAAL,GAAc,KAAKH,KAAnB,GAA2B,KAAKsE,WAApC,EAAiD;AAC/CE,MAAAA,EAAE,GAAI,KAAKxE,KAAL,GAAa,KAAKG,MAAnB,GAA6B,KAAKmE,WAAvC;AACAG,MAAAA,EAAE,GAAG,CAAL;AACD,KAHD,MAGO;AACLD,MAAAA,EAAE,GAAG,CAAL;AACAC,MAAAA,EAAE,GAAG,KAAKtE,MAAL,GAAc,KAAKH,KAAnB,GAA2B,KAAKsE,WAArC;AACD;;AAED,SAAKI,QAAL,CAAc7E,QAAd,CAAuB8E,UAAvB,CAAkCX,KAAlC,CAAwCY,CAAxC,GAA4C,KAAK5E,KAAjD;AACA,SAAK0E,QAAL,CAAc7E,QAAd,CAAuB8E,UAAvB,CAAkCX,KAAlC,CAAwCa,CAAxC,GAA4C,KAAK1E,MAAjD;AACA,SAAKuE,QAAL,CAAc7E,QAAd,CAAuB8E,UAAvB,CAAkCX,KAAlC,CAAwCc,CAAxC,GAA4CN,EAA5C;AACA,SAAKE,QAAL,CAAc7E,QAAd,CAAuB8E,UAAvB,CAAkCX,KAAlC,CAAwCe,CAAxC,GAA4CN,EAA5C;AAEA,UAAMO,IAAI,GAAG,KAAKxD,MAAL,CAAYE,QAAZ,CAAqBoD,CAAlC;AACA,UAAM3E,MAAM,GAAG,CAAf;AACA,SAAKqB,MAAL,CAAYyD,GAAZ,GAAkB,KAAK,MAAMC,IAAI,CAACC,EAAhB,IAAsBD,IAAI,CAACE,IAAL,CAAUjF,MAAM,IAAI,IAAI6E,IAAR,CAAhB,CAAxC;AAEA,SAAKK,KAAL,CAAWC,KAAX,CAAiBV,CAAjB,GAAqB,KAAKpD,MAAL,CAAY6C,MAAjC;AACA,SAAKgB,KAAL,CAAWC,KAAX,CAAiBT,CAAjB,GAAqB,CAArB;AAEA,SAAKrD,MAAL,CAAY+D,sBAAZ;AACD;;AAEDlD,EAAAA,UAAU,GAAG;AACX,QAAIO,IAAI,GAAG,IAAX;AACA,SAAK8B,QAAL,GAAgB,IAAI1F,KAAK,CAACwG,cAAV,CAAyB;AACvCC,MAAAA,UAAU,EAAE;AACVC,QAAAA,WAAW,EAAE;AADH,OAD2B;AAIvCC,MAAAA,IAAI,EAAE3G,KAAK,CAAC4G,UAJ2B;AAKvC/F,MAAAA,QAAQ,EAAE;AACR+B,QAAAA,IAAI,EAAE;AAAEiE,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SADE;AAERJ,QAAAA,QAAQ,EAAE;AAAEiC,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SAFF;AAGR8B,QAAAA,MAAM,EAAE;AAAED,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SAHA;AAIR+B,QAAAA,SAAS,EAAE;AAAEF,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SAJH;AAKRgC,QAAAA,MAAM,EAAE;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SALA;AAMRiC,QAAAA,MAAM,EAAE;AAAEJ,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SANA;AAORkC,QAAAA,UAAU,EAAE;AAAEL,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SAPJ;AAQRmC,QAAAA,KAAK,EAAE;AAAEN,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SARC;AASRhE,QAAAA,KAAK,EAAE;AAAE6F,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SATC;AAURoC,QAAAA,MAAM,EAAE;AAAEP,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE;AAApB,SAVA;AAWRqC,QAAAA,QAAQ,EAAE;AAAER,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE,KAAKlC,QAAL,CAAc,CAAd;AAApB,SAXF;AAYRwE,QAAAA,QAAQ,EAAE;AAAET,UAAAA,IAAI,EAAE,GAAR;AAAa7B,UAAAA,KAAK,EAAE,KAAKlC,QAAL,CAAc,CAAd;AAApB,SAZF;AAaRyE,QAAAA,YAAY,EAAE;AACZV,UAAAA,IAAI,EAAE,GADM;AAEZ7B,UAAAA,KAAK,EAAE,IAAIhF,KAAK,CAACmE,aAAV,GAA0BC,IAA1B,CAA+B,kBAA/B;AAFK,SAbN;AAiBRuB,QAAAA,UAAU,EAAE;AAAEkB,UAAAA,IAAI,EAAE,IAAR;AAAc7B,UAAAA,KAAK,EAAE,IAAIhF,KAAK,CAACwH,OAAV;AAArB;AAjBJ,OAL6B;AAwBvC;AACAC,MAAAA,YAAY,EAAE,KAAK9G,MAzBoB;AA0BvC+G,MAAAA,cAAc,EAAE,KAAK9G;AA1BkB,KAAzB,CAAhB;AA6BA,SAAK+G,QAAL,GAAgB,IAAI3H,KAAK,CAAC4H,aAAV,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,CAAhB;AAEA,SAAKvB,KAAL,GAAa,IAAIrG,KAAK,CAAC6H,IAAV,CAAe,KAAKF,QAApB,EAA8B,KAAKjC,QAAnC,CAAb;AACA,SAAKjF,KAAL,CAAWwE,GAAX,CAAe,KAAKoB,KAApB;AACD;;AAEDyB,EAAAA,IAAI,GAAG;AACL,SAAK/E,MAAL,GAAc,IAAd;AACD;;AAEDS,EAAAA,IAAI,GAAG;AACL,SAAKT,MAAL,GAAc,KAAd;AACA,SAAKgF,MAAL;AACD;;AAEDtD,EAAAA,IAAI,GAAG;AACL,QAAI,KAAKuD,SAAT,EAAoB;AACpB,SAAKA,SAAL,GAAiB,IAAjB;AACA,QAAIC,GAAG,GAAG,KAAKnF,QAAL,CAAcoF,MAAxB;AACA,QAAIC,WAAW,GAAG,KAAKrF,QAAL,CAAc,CAAC,KAAKD,OAAL,GAAe,CAAhB,IAAqBoF,GAAnC,CAAlB;AACA,SAAKvC,QAAL,CAAc7E,QAAd,CAAuByG,QAAvB,CAAgCtC,KAAhC,GAAwCmD,WAAxC;AACA,QAAIC,EAAE,GAAG,IAAIlI,WAAJ,EAAT;AACAkI,IAAAA,EAAE,CAACC,EAAH,CAAM,KAAK3C,QAAL,CAAc7E,QAAd,CAAuB+D,QAA7B,EAAuC,KAAKnD,QAA5C,EAAsD;AACpDuD,MAAAA,KAAK,EAAE,CAD6C;AAEpDsD,MAAAA,IAAI,EAAEnI,MAAM,CAAC,KAAKwB,MAAN,CAFwC;AAGpD4G,MAAAA,UAAU,EAAE,MAAM;AAChBtF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAKL,OAAL,GAAe,CAAC,KAAKA,OAAL,GAAe,CAAhB,IAAqBoF,GAApC;AACA,aAAKvC,QAAL,CAAc7E,QAAd,CAAuBwG,QAAvB,CAAgCrC,KAAhC,GAAwCmD,WAAxC;AACA,aAAKzC,QAAL,CAAc7E,QAAd,CAAuB+D,QAAvB,CAAgCI,KAAhC,GAAwC,CAAxC;AACA,aAAKgD,SAAL,GAAiB,KAAjB;AACD;AATmD,KAAtD;AAWD;;AACDD,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKhF,MAAT,EAAiB;AACjB,SAAKH,IAAL,IAAa,IAAb;AACA,SAAK8C,QAAL,CAAc7E,QAAd,CAAuB+B,IAAvB,CAA4BoC,KAA5B,GAAoC,KAAKpC,IAAzC,CAHO,CAIP;;AAEAiC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKjE,QAAjB,EAA2BgD,OAA3B,CAAmCkB,IAAI,IAAI;AACzC,WAAKW,QAAL,CAAc7E,QAAd,CAAuBkE,IAAvB,EAA6BC,KAA7B,GAAqC,KAAK5B,QAAL,CAAc2B,IAAd,CAArC;AACD,KAFD,EANO,CASP;AACA;AACA;;AAEAyD,IAAAA,qBAAqB,CAAC,KAAKT,MAAL,CAAY3C,IAAZ,CAAiB,IAAjB,CAAD,CAArB;AACA,SAAKtE,QAAL,CAAciH,MAAd,CAAqB,KAAKtH,KAA1B,EAAiC,KAAK+B,MAAtC;AACD;;AACDuF,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,qBAAY,2MAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiBD;;AApO4B;;AAuO/B,eAAezH,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { gsap, TimelineMax, Power2, MotionPathPlugin } from \"gsap/all\";\nimport * as dat from \"dat.gui\";\n\nclass Sketch extends Component {\n  constructor(opts) {\n    super(opts);\n    this.scene = new THREE.Scene();\n    this.vertex = `varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}`;\n    this.fragment = opts.fragment;\n    this.uniforms = opts.uniforms;\n    this.renderer = new THREE.WebGLRenderer();\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.duration = opts.duration || 1;\n    this.debug = opts.debug || false;\n    this.easing = opts.easing || \"easeInOut\";\n\n    this.clicker = document.getElementById(\"content\");\n\n    this.container = document.getElementById(\"slider\");\n    this.images = JSON.parse(this.container.getAttribute(\"data-images\"));\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.container.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n\n    this.camera.position.set(0, 0, 2);\n    this.time = 0;\n    this.current = 0;\n    this.textures = [];\n\n    this.paused = true;\n    this.initiate(() => {\n      console.log(this.textures);\n      this.setupResize();\n      this.settings();\n      this.addObjects();\n      this.resize();\n      this.clickEvent();\n      this.play();\n    });\n  }\n\n  componentDidMount() {}\n\n  initiate(cb) {\n    const promises = [];\n    let that = this;\n    this.images.forEach((url, i) => {\n      let promise = new Promise(resolve => {\n        that.textures[i] = new THREE.TextureLoader().load(url, resolve);\n      });\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      cb();\n    });\n  }\n\n  clickEvent() {\n    this.clicker.addEventListener(\"click\", () => {\n      this.next();\n    });\n  }\n\n  settings() {\n    let that = this;\n    if (this.debug) this.gui = new dat.GUI();\n    this.settings = { progress: 0.5 };\n    // if(this.debug) this.gui.add(this.settings, \"progress\", 0, 1, 0.01);\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.settings[item] = this.uniforms[item].value;\n      if (this.debug)\n        this.gui.add(\n          this.settings,\n          item,\n          this.uniforms[item].min,\n          this.uniforms[item].max,\n          0.01\n        );\n    });\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n\n    // image cover\n    this.imageAspect =\n      this.textures[0].image.height / this.textures[0].image.width;\n    let a1;\n    let a2;\n    if (this.height / this.width > this.imageAspect) {\n      a1 = (this.width / this.height) * this.imageAspect;\n      a2 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n\n    this.material.uniforms.resolution.value.x = this.width;\n    this.material.uniforms.resolution.value.y = this.height;\n    this.material.uniforms.resolution.value.z = a1;\n    this.material.uniforms.resolution.value.w = a2;\n\n    const dist = this.camera.position.z;\n    const height = 1;\n    this.camera.fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * dist));\n\n    this.plane.scale.x = this.camera.aspect;\n    this.plane.scale.y = 1;\n\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\"\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        progress: { type: \"f\", value: 0 },\n        border: { type: \"f\", value: 0 },\n        intensity: { type: \"f\", value: 0 },\n        scaleX: { type: \"f\", value: 40 },\n        scaleY: { type: \"f\", value: 40 },\n        transition: { type: \"f\", value: 40 },\n        swipe: { type: \"f\", value: 0 },\n        width: { type: \"f\", value: 0 },\n        radius: { type: \"f\", value: 0 },\n        texture1: { type: \"f\", value: this.textures[0] },\n        texture2: { type: \"f\", value: this.textures[1] },\n        displacement: {\n          type: \"f\",\n          value: new THREE.TextureLoader().load(\"../img/disp1.jpg\")\n        },\n        resolution: { type: \"v4\", value: new THREE.Vector4() }\n      },\n      // wireframe: true,\n      vertexShader: this.vertex,\n      fragmentShader: this.fragment\n    });\n\n    this.geometry = new THREE.PlaneGeometry(1, 1, 2, 2);\n\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.plane);\n  }\n\n  stop() {\n    this.paused = true;\n  }\n\n  play() {\n    this.paused = false;\n    this.render();\n  }\n\n  next() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    let len = this.textures.length;\n    let nextTexture = this.textures[(this.current + 1) % len];\n    this.material.uniforms.texture2.value = nextTexture;\n    let tl = new TimelineMax();\n    tl.to(this.material.uniforms.progress, this.duration, {\n      value: 1,\n      ease: Power2[this.easing],\n      onComplete: () => {\n        console.log(\"FINISH\");\n        this.current = (this.current + 1) % len;\n        this.material.uniforms.texture1.value = nextTexture;\n        this.material.uniforms.progress.value = 0;\n        this.isRunning = false;\n      }\n    });\n  }\n  render() {\n    if (this.paused) return;\n    this.time += 0.05;\n    this.material.uniforms.time.value = this.time;\n    // this.material.uniforms.progress.value = this.settings.progress;\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.material.uniforms[item].value = this.settings[item];\n    });\n    // this.camera.position.z = 3;\n    // this.plane.rotation.y = 0.4*Math.sin(this.time)\n    // this.plane.rotation.x = 0.5*Math.sin(0.4*this.time)\n\n    requestAnimationFrame(this.render.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n  render() {\n    return (\n      <div id=\"content\" className=\"content\">\n        <div\n          id=\"slider\"\n          data-images='[\n        \"../img/la-princiere.jpg\",\n        \"LaPrinciere5.jpg\",\n        \"LaPrinciere3.jpg\",\n        \"LaPrinciere4.jpg\",\n        \"LaPrinciere-Web1.jpg\",\n        \"LaPrinciere-Web5.jpg\",\n        \"LaPrinciere-Web4.jpg\",\n        \"LaPrinciere-Web3.jpg\"\n    ]'\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}