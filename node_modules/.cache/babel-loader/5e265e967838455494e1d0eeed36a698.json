{"ast":null,"code":"import _slicedToArray from\"/Users/serenaantonetti/Documents/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";var ReadingProgress=function ReadingProgress(_ref){var target=_ref.target;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),readingProgress=_React$useState2[0],setReadingProgress=_React$useState2[1];var scrollListener=function scrollListener(){if(!target.current){return;}var element=target.current;var totalHeight=element.clientHeight-element.offsetTop-window.innerHeight;var windowScrollTop=window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;if(windowScrollTop===0){return setReadingProgress(0);}if(windowScrollTop>totalHeight){return setReadingProgress(100);}setReadingProgress(windowScrollTop/totalHeight*100);};React.useEffect(function(){window.addEventListener(\"scroll\",scrollListener);return function(){return window.removeEventListener(\"scroll\",scrollListener);};});return React.createElement(\"div\",{className:\"reading-progress-bar\"},React.createElement(\"div\",{style:{width:\"\".concat(readingProgress,\"%\")}}));};export default ReadingProgress;","map":{"version":3,"sources":["/Users/serenaantonetti/Documents/portfolio/src/components/ProgressBar.jsx"],"names":["React","ReadingProgress","target","useState","readingProgress","setReadingProgress","scrollListener","current","element","totalHeight","clientHeight","offsetTop","window","innerHeight","windowScrollTop","pageYOffset","document","documentElement","scrollTop","body","useEffect","addEventListener","removeEventListener","width"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAgB,IAAbC,CAAAA,MAAa,MAAbA,MAAa,qBACQF,KAAK,CAACG,QAAN,CAAe,CAAf,CADR,oDAC/BC,eAD+B,qBACdC,kBADc,qBAEtC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAI,CAACJ,MAAM,CAACK,OAAZ,CAAqB,CACnB,OACD,CAED,GAAMC,CAAAA,OAAO,CAAGN,MAAM,CAACK,OAAvB,CACA,GAAME,CAAAA,WAAW,CACfD,OAAO,CAACE,YAAR,CAAuBF,OAAO,CAACG,SAA/B,CAA2CC,MAAM,CAACC,WADpD,CAEA,GAAMC,CAAAA,eAAe,CACnBF,MAAM,CAACG,WAAP,EACAC,QAAQ,CAACC,eAAT,CAAyBC,SADzB,EAEAF,QAAQ,CAACG,IAAT,CAAcD,SAFd,EAGA,CAJF,CAMA,GAAIJ,eAAe,GAAK,CAAxB,CAA2B,CACzB,MAAOT,CAAAA,kBAAkB,CAAC,CAAD,CAAzB,CACD,CAED,GAAIS,eAAe,CAAGL,WAAtB,CAAmC,CACjC,MAAOJ,CAAAA,kBAAkB,CAAC,GAAD,CAAzB,CACD,CAEDA,kBAAkB,CAAES,eAAe,CAAGL,WAAnB,CAAkC,GAAnC,CAAlB,CACD,CAvBD,CAyBAT,KAAK,CAACoB,SAAN,CAAgB,UAAM,CACpBR,MAAM,CAACS,gBAAP,CAAwB,QAAxB,CAAkCf,cAAlC,EACA,MAAO,kBAAMM,CAAAA,MAAM,CAACU,mBAAP,CAA2B,QAA3B,CAAqChB,cAArC,CAAN,EAAP,CACD,CAHD,EAKA,MACE,4BAAK,SAAS,uBAAd,EACE,2BAAK,KAAK,CAAE,CAAEiB,KAAK,WAAKnB,eAAL,KAAP,CAAZ,EADF,CADF,CAKD,CArCD,CAuCA,cAAeH,CAAAA,eAAf","sourcesContent":["import React from \"react\";\n\nconst ReadingProgress = ({ target }) => {\n  const [readingProgress, setReadingProgress] = React.useState(0);\n  const scrollListener = () => {\n    if (!target.current) {\n      return;\n    }\n\n    const element = target.current;\n    const totalHeight =\n      element.clientHeight - element.offsetTop - window.innerHeight;\n    const windowScrollTop =\n      window.pageYOffset ||\n      document.documentElement.scrollTop ||\n      document.body.scrollTop ||\n      0;\n\n    if (windowScrollTop === 0) {\n      return setReadingProgress(0);\n    }\n\n    if (windowScrollTop > totalHeight) {\n      return setReadingProgress(100);\n    }\n\n    setReadingProgress((windowScrollTop / totalHeight) * 100);\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"scroll\", scrollListener);\n    return () => window.removeEventListener(\"scroll\", scrollListener);\n  });\n\n  return (\n    <div className={`reading-progress-bar`}>\n      <div style={{ width: `${readingProgress}%` }} />\n    </div>\n  );\n};\n\nexport default ReadingProgress;\n"]},"metadata":{},"sourceType":"module"}