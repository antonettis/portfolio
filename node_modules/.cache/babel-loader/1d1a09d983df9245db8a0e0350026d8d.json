{"ast":null,"code":"'use strict';\n\nvar bits = require('bit-twiddle');\n\nvar dup = require('dup'); //Legacy pool support\n\n\nif (!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n    UINT8: dup([32, 0]),\n    UINT16: dup([32, 0]),\n    UINT32: dup([32, 0]),\n    INT8: dup([32, 0]),\n    INT16: dup([32, 0]),\n    INT32: dup([32, 0]),\n    FLOAT: dup([32, 0]),\n    DOUBLE: dup([32, 0]),\n    DATA: dup([32, 0]),\n    UINT8C: dup([32, 0]),\n    BUFFER: dup([32, 0])\n  };\n}\n\nvar hasUint8C = typeof Uint8ClampedArray !== 'undefined';\nvar POOL = global.__TYPEDARRAY_POOL; //Upgrade pool\n\nif (!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0]);\n}\n\nif (!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0]);\n} //New technique: Only allocate from ArrayBufferView and Buffer\n\n\nvar DATA = POOL.DATA,\n    BUFFER = POOL.BUFFER;\n\nexports.free = function free(array) {\n  if (Buffer.isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array);\n  } else {\n    if (Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer;\n    }\n\n    if (!array) {\n      return;\n    }\n\n    var n = array.length || array.byteLength;\n    var log_n = bits.log2(n) | 0;\n    DATA[log_n].push(array);\n  }\n};\n\nfunction freeArrayBuffer(buffer) {\n  if (!buffer) {\n    return;\n  }\n\n  var n = buffer.length || buffer.byteLength;\n  var log_n = bits.log2(n);\n  DATA[log_n].push(buffer);\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer);\n}\n\nexports.freeUint8 = exports.freeUint16 = exports.freeUint32 = exports.freeInt8 = exports.freeInt16 = exports.freeInt32 = exports.freeFloat32 = exports.freeFloat = exports.freeFloat64 = exports.freeDouble = exports.freeUint8Clamped = exports.freeDataView = freeTypedArray;\nexports.freeArrayBuffer = freeArrayBuffer;\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array);\n};\n\nexports.malloc = function malloc(n, dtype) {\n  if (dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n);\n  } else {\n    switch (dtype) {\n      case 'uint8':\n        return mallocUint8(n);\n\n      case 'uint16':\n        return mallocUint16(n);\n\n      case 'uint32':\n        return mallocUint32(n);\n\n      case 'int8':\n        return mallocInt8(n);\n\n      case 'int16':\n        return mallocInt16(n);\n\n      case 'int32':\n        return mallocInt32(n);\n\n      case 'float':\n      case 'float32':\n        return mallocFloat(n);\n\n      case 'double':\n      case 'float64':\n        return mallocDouble(n);\n\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n);\n\n      case 'buffer':\n        return mallocBuffer(n);\n\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n);\n\n      default:\n        return null;\n    }\n  }\n\n  return null;\n};\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n);\n  var log_n = bits.log2(n);\n  var d = DATA[log_n];\n\n  if (d.length > 0) {\n    return d.pop();\n  }\n\n  return new ArrayBuffer(n);\n}\n\nexports.mallocArrayBuffer = mallocArrayBuffer;\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n);\n}\n\nexports.mallocUint8 = mallocUint8;\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2 * n), 0, n);\n}\n\nexports.mallocUint16 = mallocUint16;\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4 * n), 0, n);\n}\n\nexports.mallocUint32 = mallocUint32;\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n);\n}\n\nexports.mallocInt8 = mallocInt8;\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2 * n), 0, n);\n}\n\nexports.mallocInt16 = mallocInt16;\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4 * n), 0, n);\n}\n\nexports.mallocInt32 = mallocInt32;\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4 * n), 0, n);\n}\n\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat;\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8 * n), 0, n);\n}\n\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble;\n\nfunction mallocUint8Clamped(n) {\n  if (hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n);\n  } else {\n    return mallocUint8(n);\n  }\n}\n\nexports.mallocUint8Clamped = mallocUint8Clamped;\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n);\n}\n\nexports.mallocDataView = mallocDataView;\n\nfunction mallocBuffer(n) {\n  n = bits.nextPow2(n);\n  var log_n = bits.log2(n);\n  var cache = BUFFER[log_n];\n\n  if (cache.length > 0) {\n    return cache.pop();\n  }\n\n  return new Buffer(n);\n}\n\nexports.mallocBuffer = mallocBuffer;\n\nexports.clearCache = function clearCache() {\n  for (var i = 0; i < 32; ++i) {\n    POOL.UINT8[i].length = 0;\n    POOL.UINT16[i].length = 0;\n    POOL.UINT32[i].length = 0;\n    POOL.INT8[i].length = 0;\n    POOL.INT16[i].length = 0;\n    POOL.INT32[i].length = 0;\n    POOL.FLOAT[i].length = 0;\n    POOL.DOUBLE[i].length = 0;\n    POOL.UINT8C[i].length = 0;\n    DATA[i].length = 0;\n    BUFFER[i].length = 0;\n  }\n};","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/node_modules/typedarray-pool/pool.js"],"names":["bits","require","dup","global","__TYPEDARRAY_POOL","UINT8","UINT16","UINT32","INT8","INT16","INT32","FLOAT","DOUBLE","DATA","UINT8C","BUFFER","hasUint8C","Uint8ClampedArray","POOL","exports","free","array","Buffer","isBuffer","log2","length","push","Object","prototype","toString","call","buffer","n","byteLength","log_n","freeArrayBuffer","freeTypedArray","freeUint8","freeUint16","freeUint32","freeInt8","freeInt16","freeInt32","freeFloat32","freeFloat","freeFloat64","freeDouble","freeUint8Clamped","freeDataView","freeBuffer","malloc","dtype","undefined","mallocArrayBuffer","mallocUint8","mallocUint16","mallocUint32","mallocInt8","mallocInt16","mallocInt32","mallocFloat","mallocDouble","mallocUint8Clamped","mallocBuffer","mallocDataView","nextPow2","d","pop","ArrayBuffer","Uint8Array","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","Float32Array","mallocFloat32","Float64Array","mallocFloat64","DataView","cache","clearCache","i"],"mappings":"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","sourcesContent":["'use strict'\n\nvar bits = require('bit-twiddle')\nvar dup = require('dup')\n\n//Legacy pool support\nif(!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n      UINT8   : dup([32, 0])\n    , UINT16  : dup([32, 0])\n    , UINT32  : dup([32, 0])\n    , INT8    : dup([32, 0])\n    , INT16   : dup([32, 0])\n    , INT32   : dup([32, 0])\n    , FLOAT   : dup([32, 0])\n    , DOUBLE  : dup([32, 0])\n    , DATA    : dup([32, 0])\n    , UINT8C  : dup([32, 0])\n    , BUFFER  : dup([32, 0])\n  }\n}\n\nvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\nvar POOL = global.__TYPEDARRAY_POOL\n\n//Upgrade pool\nif(!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0])\n}\nif(!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0])\n}\n\n//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA    = POOL.DATA\n  , BUFFER  = POOL.BUFFER\n\nexports.free = function free(array) {\n  if(Buffer.isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array)\n  } else {\n    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer\n    }\n    if(!array) {\n      return\n    }\n    var n = array.length || array.byteLength\n    var log_n = bits.log2(n)|0\n    DATA[log_n].push(array)\n  }\n}\n\nfunction freeArrayBuffer(buffer) {\n  if(!buffer) {\n    return\n  }\n  var n = buffer.length || buffer.byteLength\n  var log_n = bits.log2(n)\n  DATA[log_n].push(buffer)\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer)\n}\n\nexports.freeUint8 =\nexports.freeUint16 =\nexports.freeUint32 =\nexports.freeInt8 =\nexports.freeInt16 =\nexports.freeInt32 =\nexports.freeFloat32 = \nexports.freeFloat =\nexports.freeFloat64 = \nexports.freeDouble = \nexports.freeUint8Clamped = \nexports.freeDataView = freeTypedArray\n\nexports.freeArrayBuffer = freeArrayBuffer\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array)\n}\n\nexports.malloc = function malloc(n, dtype) {\n  if(dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n)\n  } else {\n    switch(dtype) {\n      case 'uint8':\n        return mallocUint8(n)\n      case 'uint16':\n        return mallocUint16(n)\n      case 'uint32':\n        return mallocUint32(n)\n      case 'int8':\n        return mallocInt8(n)\n      case 'int16':\n        return mallocInt16(n)\n      case 'int32':\n        return mallocInt32(n)\n      case 'float':\n      case 'float32':\n        return mallocFloat(n)\n      case 'double':\n      case 'float64':\n        return mallocDouble(n)\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n)\n      case 'buffer':\n        return mallocBuffer(n)\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n)\n\n      default:\n        return null\n    }\n  }\n  return null\n}\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var d = DATA[log_n]\n  if(d.length > 0) {\n    return d.pop()\n  }\n  return new ArrayBuffer(n)\n}\nexports.mallocArrayBuffer = mallocArrayBuffer\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocUint8 = mallocUint8\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocUint16 = mallocUint16\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocUint32 = mallocUint32\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocInt8 = mallocInt8\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocInt16 = mallocInt16\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocInt32 = mallocInt32\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n}\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\nfunction mallocUint8Clamped(n) {\n  if(hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n  } else {\n    return mallocUint8(n)\n  }\n}\nexports.mallocUint8Clamped = mallocUint8Clamped\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocDataView = mallocDataView\n\nfunction mallocBuffer(n) {\n  n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var cache = BUFFER[log_n]\n  if(cache.length > 0) {\n    return cache.pop()\n  }\n  return new Buffer(n)\n}\nexports.mallocBuffer = mallocBuffer\n\nexports.clearCache = function clearCache() {\n  for(var i=0; i<32; ++i) {\n    POOL.UINT8[i].length = 0\n    POOL.UINT16[i].length = 0\n    POOL.UINT32[i].length = 0\n    POOL.INT8[i].length = 0\n    POOL.INT16[i].length = 0\n    POOL.INT32[i].length = 0\n    POOL.FLOAT[i].length = 0\n    POOL.DOUBLE[i].length = 0\n    POOL.UINT8C[i].length = 0\n    DATA[i].length = 0\n    BUFFER[i].length = 0\n  }\n}"]},"metadata":{},"sourceType":"script"}