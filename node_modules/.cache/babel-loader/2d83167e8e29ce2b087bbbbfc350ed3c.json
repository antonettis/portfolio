{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n/**\n *\n */\n\nclass Visitor {\n  /**\n   *\n   */\n  onSurfaceMount(surface) {}\n  /**\n   *\n   */\n\n\n  onSurfaceUnmount(surface) {}\n  /**\n   *\n   */\n\n\n  onSurfaceGLContextChange(surface, gl) {}\n  /**\n   */\n\n\n  onSurfaceDrawSkipped(surface) {}\n  /**\n   */\n\n\n  onSurfaceDrawStart(surface) {}\n  /**\n   * if returns true, it prevent a throw to happen from the request animation frame loop (or from a surface.flush() call).\n   */\n\n\n  onSurfaceDrawError(e) {\n    return false;\n  }\n  /**\n   */\n\n\n  onSurfaceDrawEnd(surface) {}\n  /**\n   */\n\n\n  onNodeDrawSkipped(node) {}\n  /**\n   */\n\n\n  onNodeDrawStart(node) {}\n  /**\n   */\n\n\n  onNodeSyncDeps(node, additions, deletions) {}\n  /**\n   */\n\n\n  onNodeDraw(node, preparedUniforms) {}\n  /**\n   */\n\n\n  onNodeDrawEnd(node) {}\n\n}\n\nexports.default = Visitor;","map":{"version":3,"sources":["../src/Visitor.js"],"names":["onSurfaceMount","onSurfaceUnmount","onSurfaceGLContextChange","onSurfaceDrawSkipped","onSurfaceDrawStart","onSurfaceDrawError","onSurfaceDrawEnd","onNodeDrawSkipped","onNodeDrawStart","onNodeSyncDeps","onNodeDraw","onNodeDrawEnd"],"mappings":";;;;;;AA2BA;;;;AAGe,MAAA,OAAA,CAAc;AAC3B;;;AAGAA,EAAAA,cAAc,CAAA,OAAA,EAAmB,CAAE;AACnC;;;;;AAGAC,EAAAA,gBAAgB,CAAA,OAAA,EAAmB,CAAE;AACrC;;;;;AAGAC,EAAAA,wBAAwB,CAAA,OAAA,EAAA,EAAA,EAA+C,CAAE;AACzE;;;;AAEAC,EAAAA,oBAAoB,CAAA,OAAA,EAAmB,CAAE;AACzC;;;;AAEAC,EAAAA,kBAAkB,CAAA,OAAA,EAAmB,CAAE;AACvC;;;;;AAGAC,EAAAA,kBAAkB,CAAA,CAAA,EAAW;AAC3B,WAAA,KAAA;AACD;AACD;;;;AAEAC,EAAAA,gBAAgB,CAAA,OAAA,EAAmB,CAAE;AACrC;;;;AAEAC,EAAAA,iBAAiB,CAAA,IAAA,EAAa,CAAE;AAChC;;;;AAEAC,EAAAA,eAAe,CAAA,IAAA,EAAa,CAAE;AAC9B;;;;AAEAC,EAAAA,cAAc,CAAA,IAAA,EAAA,SAAA,EAAA,SAAA,EAIZ,CAAE;AACJ;;;;AAEAC,EAAAA,UAAU,CAAA,IAAA,EAAA,gBAAA,EAAyC,CAAE;AACrD;;;;AAEAC,EAAAA,aAAa,CAAA,IAAA,EAAa,CAAE;;AA9CD","sourcesContent":["//@flow\nimport type { Surface } from \"./createSurface\";\nimport type Node from \"./Node\";\nimport type Bus from \"./Bus\";\n\nexport type VisitorLike = {\n  +onSurfaceMount: (surface: Surface) => void,\n  +onSurfaceUnmount: (surface: Surface) => void,\n  +onSurfaceGLContextChange: (\n    surface: Surface,\n    gl: ?WebGLRenderingContext\n  ) => void,\n  +onSurfaceDrawSkipped: (surface: Surface) => void,\n  +onSurfaceDrawStart: (surface: Surface) => void,\n  +onSurfaceDrawError: (e: Error) => any,\n  +onSurfaceDrawEnd: (surface: Surface) => void,\n  +onNodeDrawSkipped: (node: Node) => void,\n  +onNodeDrawStart: (node: Node) => void,\n  +onNodeSyncDeps: (\n    node: Node,\n    additions: Array<Node | Bus>,\n    deletions: Array<Node | Bus>\n  ) => void,\n  +onNodeDraw: (node: Node, preparedUniforms: Array<*>) => void,\n  +onNodeDrawEnd: (node: Node) => void\n};\n\n/**\n *\n */\nexport default class Visitor {\n  /**\n   *\n   */\n  onSurfaceMount(surface: Surface) {}\n  /**\n   *\n   */\n  onSurfaceUnmount(surface: Surface) {}\n  /**\n   *\n   */\n  onSurfaceGLContextChange(surface: Surface, gl: ?WebGLRenderingContext) {}\n  /**\n   */\n  onSurfaceDrawSkipped(surface: Surface) {}\n  /**\n   */\n  onSurfaceDrawStart(surface: Surface) {}\n  /**\n   * if returns true, it prevent a throw to happen from the request animation frame loop (or from a surface.flush() call).\n   */\n  onSurfaceDrawError(e: Error) {\n    return false;\n  }\n  /**\n   */\n  onSurfaceDrawEnd(surface: Surface) {}\n  /**\n   */\n  onNodeDrawSkipped(node: Node) {}\n  /**\n   */\n  onNodeDrawStart(node: Node) {}\n  /**\n   */\n  onNodeSyncDeps(\n    node: Node,\n    additions: Array<Node | Bus>,\n    deletions: Array<Node | Bus>\n  ) {}\n  /**\n   */\n  onNodeDraw(node: Node, preparedUniforms: Array<*>) {}\n  /**\n   */\n  onNodeDrawEnd(node: Node) {}\n}\n"]},"metadata":{},"sourceType":"script"}