{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/VideoPlayer.jsx\";\nimport React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\nexport default class VideoPlayer extends React.Component {\n  componentDidMount() {\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n      console.log(\"onPlayerReady\", this);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const videoUrl = this.props.videoUrl;\n    const folderSrc = this.props.folderSrc;\n    const videoJsOptions = {\n      autoPlay: true,\n      width: 2000,\n      height: 1500,\n      controls: false,\n      loop: true,\n      muted: true,\n      preload: 'auto',\n      aspectRatio: \"2:1.5\",\n      fluid: true\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"data-vjs-player\": true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"video\", Object.assign({}, videoJsOptions, {\n      ref: node => this.videoNode = node,\n      className: \"video-js\",\n      src: require(`../img${folderSrc}/${videoUrl}.mp4`),\n      type: \"video/mp4\",\n      poster: require(`../img${folderSrc}/${videoUrl}.jpg`),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/VideoPlayer.jsx"],"names":["React","videojs","VideoPlayer","Component","componentDidMount","player","videoNode","props","onPlayerReady","console","log","componentWillUnmount","dispose","render","videoUrl","folderSrc","videoJsOptions","autoPlay","width","height","controls","loop","muted","preload","aspectRatio","fluid","node","require"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,4BAAP;AAEA,eAAe,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AACvDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,MAAL,GAAcJ,OAAO,CAAC,KAAKK,SAAN,EAAiB,KAAKC,KAAtB,EAA6B,SAASC,aAAT,GAAyB;AACzEC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,IAA7B;AACD,KAFoB,CAArB;AAGD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,QAAI,KAAKN,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYO,OAAZ;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG,KAAKP,KAAL,CAAWO,QAA5B;AACA,UAAMC,SAAS,GAAG,KAAKR,KAAL,CAAWQ,SAA7B;AACA,UAAMC,cAAc,GAAG;AACrBC,MAAAA,QAAQ,EAAE,IADW;AAErBC,MAAAA,KAAK,EAAE,IAFc;AAGrBC,MAAAA,MAAM,EAAE,IAHa;AAIrBC,MAAAA,QAAQ,EAAE,KAJW;AAKrBC,MAAAA,IAAI,EAAE,IALe;AAMrBC,MAAAA,KAAK,EAAE,IANc;AAOrBC,MAAAA,OAAO,EAAE,MAPY;AAQrBC,MAAAA,WAAW,EAAE,OARQ;AASrBC,MAAAA,KAAK,EAAE;AATc,KAAvB;AAYA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,6BAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,+CACMT,cADN;AAEE,MAAA,GAAG,EAAEU,IAAI,IAAK,KAAKpB,SAAL,GAAiBoB,IAFjC;AAGE,MAAA,SAAS,EAAC,UAHZ;AAIE,MAAA,GAAG,EAAEC,OAAO,CAAE,SAAQZ,SAAU,IAAGD,QAAS,MAAhC,CAJd;AAKE,MAAA,IAAI,EAAC,WALP;AAME,MAAA,MAAM,EAAEa,OAAO,CAAE,SAAQZ,SAAU,IAAGD,QAAS,MAAhC,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAcD;;AA1CsD","sourcesContent":["import React from \"react\";\nimport videojs from \"video.js\";\nimport \"video.js/dist/video-js.css\";\n\nexport default class VideoPlayer extends React.Component {\n  componentDidMount() {\n    this.player = videojs(this.videoNode, this.props, function onPlayerReady() {\n      console.log(\"onPlayerReady\", this);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const videoUrl = this.props.videoUrl;\n    const folderSrc = this.props.folderSrc;\n    const videoJsOptions = {\n      autoPlay: true,\n      width: 2000,\n      height: 1500,\n      controls: false,\n      loop: true,\n      muted: true,\n      preload: 'auto',\n      aspectRatio: \"2:1.5\",\n      fluid: true\n    };\n\n    return (\n      <div>\n        <div data-vjs-player>\n          <video\n            {...videoJsOptions}\n            ref={node => (this.videoNode = node)}\n            className=\"video-js\"\n            src={require(`../img${folderSrc}/${videoUrl}.mp4`)}\n            type=\"video/mp4\"\n            poster={require(`../img${folderSrc}/${videoUrl}.jpg`)}\n          ></video>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}