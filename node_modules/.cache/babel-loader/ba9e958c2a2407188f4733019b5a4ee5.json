{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/Sketch.js\";\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { TimelineMax, Power2 } from \"gsap/all\";\nimport * as dat from \"dat.gui\";\n\nclass Sketch extends Component {\n  constructor(opts) {\n    super(opts);\n    this.scene = new THREE.Scene();\n    this.vertex = `varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}`;\n    this.fragment = opts.fragment;\n    this.uniforms = opts.uniforms;\n    this.renderer = new THREE.WebGLRenderer();\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.duration = opts.duration || 1;\n    this.debug = opts.debug || false;\n    this.easing = opts.easing || \"easeInOut\";\n  }\n\n  componentDidMount() {\n    this.clicker = document.getElementById(\"content\");\n    this.container = document.getElementById(\"slider\");\n    this.images = JSON.parse(this.container.getAttribute(\"data-images\"));\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight; // this.container.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.001, 1000);\n    this.camera.position.set(0, 0, 2);\n    this.time = 0;\n    this.current = 0;\n    this.textures = [];\n    this.paused = true; // this.initiate(() => {\n    //   console.log(this.textures);\n    //   this.setupResize();\n    //   this.settings();\n    //   this.addObjects();\n    //   this.resize();\n    //   this.clickEvent();\n    //   this.play();\n    // });\n\n    console.log(this.container);\n    console.log(this.images[0]);\n  }\n\n  initiate(cb) {\n    const promises = [];\n    let that = this;\n    this.images.forEach((url, i) => {\n      let promise = new Promise(resolve => {\n        that.textures[i] = new THREE.TextureLoader().load(url, resolve);\n      });\n      promises.push(promise);\n    });\n    Promise.all(promises).then(() => {\n      cb();\n    });\n  }\n\n  clickEvent() {\n    this.clicker.addEventListener(\"click\", () => {\n      this.next();\n    });\n  }\n\n  settings() {\n    let that = this;\n    if (this.debug) this.gui = new dat.GUI();\n    this.settings = {\n      progress: 0.5\n    }; // if(this.debug) this.gui.add(this.settings, \"progress\", 0, 1, 0.01);\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.settings[item] = this.uniforms[item].value;\n      if (this.debug) this.gui.add(this.settings, item, this.uniforms[item].min, this.uniforms[item].max, 0.01);\n    });\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height; // image cover\n\n    this.imageAspect = this.textures[0].image.height / this.textures[0].image.width;\n    let a1;\n    let a2;\n\n    if (this.height / this.width > this.imageAspect) {\n      a1 = this.width / this.height * this.imageAspect;\n      a2 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n\n    this.material.uniforms.resolution.value.x = this.width;\n    this.material.uniforms.resolution.value.y = this.height;\n    this.material.uniforms.resolution.value.z = a1;\n    this.material.uniforms.resolution.value.w = a2;\n    const dist = this.camera.position.z;\n    const height = 1;\n    this.camera.fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * dist));\n    this.plane.scale.x = this.camera.aspect;\n    this.plane.scale.y = 1;\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\"\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: {\n          type: \"f\",\n          value: 0\n        },\n        progress: {\n          type: \"f\",\n          value: 0\n        },\n        border: {\n          type: \"f\",\n          value: 0\n        },\n        intensity: {\n          type: \"f\",\n          value: 0\n        },\n        scaleX: {\n          type: \"f\",\n          value: 40\n        },\n        scaleY: {\n          type: \"f\",\n          value: 40\n        },\n        transition: {\n          type: \"f\",\n          value: 40\n        },\n        swipe: {\n          type: \"f\",\n          value: 0\n        },\n        width: {\n          type: \"f\",\n          value: 0\n        },\n        radius: {\n          type: \"f\",\n          value: 0\n        },\n        texture1: {\n          type: \"f\",\n          value: this.textures[0]\n        },\n        texture2: {\n          type: \"f\",\n          value: this.textures[1]\n        },\n        displacement: {\n          type: \"f\",\n          value: new THREE.TextureLoader().load(\"../img/disp1.jpg\")\n        },\n        resolution: {\n          type: \"v4\",\n          value: new THREE.Vector4()\n        }\n      },\n      // wireframe: true,\n      vertexShader: this.vertex,\n      fragmentShader: this.fragment\n    });\n    this.geometry = new THREE.PlaneGeometry(1, 1, 2, 2);\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.plane);\n  }\n\n  stop() {\n    this.paused = true;\n  }\n\n  play() {\n    this.paused = false;\n    this.render();\n  }\n\n  next() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    let len = this.textures.length;\n    let nextTexture = this.textures[(this.current + 1) % len];\n    this.material.uniforms.texture2.value = nextTexture;\n    let tl = new TimelineMax();\n    tl.to(this.material.uniforms.progress, this.duration, {\n      value: 1,\n      ease: Power2[this.easing],\n      onComplete: () => {\n        console.log(\"FINISH\");\n        this.current = (this.current + 1) % len;\n        this.material.uniforms.texture1.value = nextTexture;\n        this.material.uniforms.progress.value = 0;\n        this.isRunning = false;\n      }\n    });\n  }\n\n  render() {\n    if (this.paused) return;\n    this.time += 0.05;\n    this.material.uniforms.time.value = this.time; // this.material.uniforms.progress.value = this.settings.progress;\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.material.uniforms[item].value = this.settings[item];\n    }); // this.camera.position.z = 3;\n    // this.plane.rotation.y = 0.4*Math.sin(this.time)\n    // this.plane.rotation.x = 0.5*Math.sin(0.4*this.time)\n\n    requestAnimationFrame(this.render.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  render() {\n    let sketch = new Sketch({\n      debug: true,\n      uniforms: {\n        intensity: {\n          value: 0.3,\n          type: \"f\",\n          min: 0,\n          max: 2\n        }\n      },\n      fragment: `\n\t\tuniform float time;\n\t\tuniform float progress;\n\t\tuniform float width;\n\t\tuniform float scaleX;\n\t\tuniform float scaleY;\n\t\tuniform float transition;\n\t\tuniform float radius;\n\t\tuniform float intensity;\n\t\tuniform sampler2D texture1;\n\t\tuniform sampler2D texture2;\n\t\tuniform sampler2D displacement;\n\t\tuniform vec4 resolution;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main()\t{\n\t\t  vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\n         vec4 d1 = texture2D(texture1, newUV);\n         vec4 d2 = texture2D(texture2, newUV);\n\n         float displace1 = (d1.r + d1.g + d1.b)*0.33;\n         float displace2 = (d2.r + d2.g + d2.b)*0.33;\n         \n         vec4 t1 = texture2D(texture1, vec2(newUV.x, newUV.y + progress * (displace2 * intensity)));\n         vec4 t2 = texture2D(texture2, vec2(newUV.x, newUV.y + (1.0 - progress) * (displace1 * intensity)));\n\n         gl_FragColor = mix(t1, t2, progress);\n\n\t\t}\n\n\t`\n    });\n    return React.createElement(\"div\", {\n      id: \"content\",\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"slider\",\n      \"data-images\": \"[ \\\"https://images.unsplash.com/photo-1577337712775-34238fe04f69?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80, \\\"LaPrinciere5.jpg\\\", \\\"LaPrinciere3.jpg\\\", \\\"LaPrinciere4.jpg\\\", \\\"LaPrinciere-Web1.jpg\\\", \\\"LaPrinciere-Web5.jpg\\\", \\\"LaPrinciere-Web4.jpg\\\", \\\"LaPrinciere-Web3.jpg\\\" ]\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Sketch;","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/Sketch.js"],"names":["React","Component","THREE","TimelineMax","Power2","dat","Sketch","constructor","opts","scene","Scene","vertex","fragment","uniforms","renderer","WebGLRenderer","width","window","innerWidth","height","innerHeight","setPixelRatio","devicePixelRatio","setSize","setClearColor","duration","debug","easing","componentDidMount","clicker","document","getElementById","container","images","JSON","parse","getAttribute","offsetWidth","offsetHeight","camera","PerspectiveCamera","position","set","time","current","textures","paused","console","log","initiate","cb","promises","that","forEach","url","i","promise","Promise","resolve","TextureLoader","load","push","all","then","clickEvent","addEventListener","next","settings","gui","GUI","progress","Object","keys","item","value","add","min","max","setupResize","resize","bind","aspect","imageAspect","image","a1","a2","material","resolution","x","y","z","w","dist","fov","Math","PI","atan","plane","scale","updateProjectionMatrix","addObjects","ShaderMaterial","extensions","derivatives","side","DoubleSide","type","border","intensity","scaleX","scaleY","transition","swipe","radius","texture1","texture2","displacement","Vector4","vertexShader","fragmentShader","geometry","PlaneGeometry","Mesh","stop","play","render","isRunning","len","length","nextTexture","tl","to","ease","onComplete","requestAnimationFrame","sketch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,UAApC;AACA,OAAO,KAAKC,GAAZ,MAAqB,SAArB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAC7BM,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,UAAMA,IAAN;AACA,SAAKC,KAAL,GAAa,IAAIP,KAAK,CAACQ,KAAV,EAAb;AACA,SAAKC,MAAL,GAAe,mHAAf;AACA,SAAKC,QAAL,GAAgBJ,IAAI,CAACI,QAArB;AACA,SAAKC,QAAL,GAAgBL,IAAI,CAACK,QAArB;AACA,SAAKC,QAAL,GAAgB,IAAIZ,KAAK,CAACa,aAAV,EAAhB;AACA,SAAKC,KAAL,GAAaC,MAAM,CAACC,UAApB;AACA,SAAKC,MAAL,GAAcF,MAAM,CAACG,WAArB;AACA,SAAKN,QAAL,CAAcO,aAAd,CAA4BJ,MAAM,CAACK,gBAAnC;AACA,SAAKR,QAAL,CAAcS,OAAd,CAAsB,KAAKP,KAA3B,EAAkC,KAAKG,MAAvC;AACA,SAAKL,QAAL,CAAcU,aAAd,CAA4B,QAA5B,EAAsC,CAAtC;AACA,SAAKC,QAAL,GAAgBjB,IAAI,CAACiB,QAAL,IAAiB,CAAjC;AACA,SAAKC,KAAL,GAAalB,IAAI,CAACkB,KAAL,IAAc,KAA3B;AACA,SAAKC,MAAL,GAAcnB,IAAI,CAACmB,MAAL,IAAe,WAA7B;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAf;AAEA,SAAKC,SAAL,GAAiBF,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAjB;AACA,SAAKE,MAAL,GAAcC,IAAI,CAACC,KAAL,CAAW,KAAKH,SAAL,CAAeI,YAAf,CAA4B,aAA5B,CAAX,CAAd;AACA,SAAKpB,KAAL,GAAa,KAAKgB,SAAL,CAAeK,WAA5B;AACA,SAAKlB,MAAL,GAAc,KAAKa,SAAL,CAAeM,YAA7B,CANkB,CAOlB;;AAEA,SAAKC,MAAL,GAAc,IAAIrC,KAAK,CAACsC,iBAAV,CACZ,EADY,EAEZvB,MAAM,CAACC,UAAP,GAAoBD,MAAM,CAACG,WAFf,EAGZ,KAHY,EAIZ,IAJY,CAAd;AAOA,SAAKmB,MAAL,CAAYE,QAAZ,CAAqBC,GAArB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACA,SAAKC,IAAL,GAAY,CAAZ;AACA,SAAKC,OAAL,GAAe,CAAf;AACA,SAAKC,QAAL,GAAgB,EAAhB;AAEA,SAAKC,MAAL,GAAc,IAAd,CArBkB,CAsBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,SAAjB;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,MAAL,CAAY,CAAZ,CAAZ;AACD;;AAEDgB,EAAAA,QAAQ,CAACC,EAAD,EAAK;AACX,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAIC,IAAI,GAAG,IAAX;AACA,SAAKnB,MAAL,CAAYoB,OAAZ,CAAoB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC9B,UAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACnCN,QAAAA,IAAI,CAACP,QAAL,CAAcU,CAAd,IAAmB,IAAIrD,KAAK,CAACyD,aAAV,GAA0BC,IAA1B,CAA+BN,GAA/B,EAAoCI,OAApC,CAAnB;AACD,OAFa,CAAd;AAGAP,MAAAA,QAAQ,CAACU,IAAT,CAAcL,OAAd;AACD,KALD;AAOAC,IAAAA,OAAO,CAACK,GAAR,CAAYX,QAAZ,EAAsBY,IAAtB,CAA2B,MAAM;AAC/Bb,MAAAA,EAAE;AACH,KAFD;AAGD;;AAEDc,EAAAA,UAAU,GAAG;AACX,SAAKnC,OAAL,CAAaoC,gBAAb,CAA8B,OAA9B,EAAuC,MAAM;AAC3C,WAAKC,IAAL;AACD,KAFD;AAGD;;AAEDC,EAAAA,QAAQ,GAAG;AACT,QAAIf,IAAI,GAAG,IAAX;AACA,QAAI,KAAK1B,KAAT,EAAgB,KAAK0C,GAAL,GAAW,IAAI/D,GAAG,CAACgE,GAAR,EAAX;AAChB,SAAKF,QAAL,GAAgB;AAAEG,MAAAA,QAAQ,EAAE;AAAZ,KAAhB,CAHS,CAIT;;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAK3D,QAAjB,EAA2BwC,OAA3B,CAAmCoB,IAAI,IAAI;AACzC,WAAKN,QAAL,CAAcM,IAAd,IAAsB,KAAK5D,QAAL,CAAc4D,IAAd,EAAoBC,KAA1C;AACA,UAAI,KAAKhD,KAAT,EACE,KAAK0C,GAAL,CAASO,GAAT,CACE,KAAKR,QADP,EAEEM,IAFF,EAGE,KAAK5D,QAAL,CAAc4D,IAAd,EAAoBG,GAHtB,EAIE,KAAK/D,QAAL,CAAc4D,IAAd,EAAoBI,GAJtB,EAKE,IALF;AAOH,KAVD;AAWD;;AAEDC,EAAAA,WAAW,GAAG;AACZ7D,IAAAA,MAAM,CAACgD,gBAAP,CAAwB,QAAxB,EAAkC,KAAKc,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAlC;AACD;;AAEDD,EAAAA,MAAM,GAAG;AACP,SAAK/D,KAAL,GAAa,KAAKgB,SAAL,CAAeK,WAA5B;AACA,SAAKlB,MAAL,GAAc,KAAKa,SAAL,CAAeM,YAA7B;AACA,SAAKxB,QAAL,CAAcS,OAAd,CAAsB,KAAKP,KAA3B,EAAkC,KAAKG,MAAvC;AACA,SAAKoB,MAAL,CAAY0C,MAAZ,GAAqB,KAAKjE,KAAL,GAAa,KAAKG,MAAvC,CAJO,CAMP;;AACA,SAAK+D,WAAL,GACE,KAAKrC,QAAL,CAAc,CAAd,EAAiBsC,KAAjB,CAAuBhE,MAAvB,GAAgC,KAAK0B,QAAL,CAAc,CAAd,EAAiBsC,KAAjB,CAAuBnE,KADzD;AAEA,QAAIoE,EAAJ;AACA,QAAIC,EAAJ;;AACA,QAAI,KAAKlE,MAAL,GAAc,KAAKH,KAAnB,GAA2B,KAAKkE,WAApC,EAAiD;AAC/CE,MAAAA,EAAE,GAAI,KAAKpE,KAAL,GAAa,KAAKG,MAAnB,GAA6B,KAAK+D,WAAvC;AACAG,MAAAA,EAAE,GAAG,CAAL;AACD,KAHD,MAGO;AACLD,MAAAA,EAAE,GAAG,CAAL;AACAC,MAAAA,EAAE,GAAG,KAAKlE,MAAL,GAAc,KAAKH,KAAnB,GAA2B,KAAKkE,WAArC;AACD;;AAED,SAAKI,QAAL,CAAczE,QAAd,CAAuB0E,UAAvB,CAAkCb,KAAlC,CAAwCc,CAAxC,GAA4C,KAAKxE,KAAjD;AACA,SAAKsE,QAAL,CAAczE,QAAd,CAAuB0E,UAAvB,CAAkCb,KAAlC,CAAwCe,CAAxC,GAA4C,KAAKtE,MAAjD;AACA,SAAKmE,QAAL,CAAczE,QAAd,CAAuB0E,UAAvB,CAAkCb,KAAlC,CAAwCgB,CAAxC,GAA4CN,EAA5C;AACA,SAAKE,QAAL,CAAczE,QAAd,CAAuB0E,UAAvB,CAAkCb,KAAlC,CAAwCiB,CAAxC,GAA4CN,EAA5C;AAEA,UAAMO,IAAI,GAAG,KAAKrD,MAAL,CAAYE,QAAZ,CAAqBiD,CAAlC;AACA,UAAMvE,MAAM,GAAG,CAAf;AACA,SAAKoB,MAAL,CAAYsD,GAAZ,GAAkB,KAAK,MAAMC,IAAI,CAACC,EAAhB,IAAsBD,IAAI,CAACE,IAAL,CAAU7E,MAAM,IAAI,IAAIyE,IAAR,CAAhB,CAAxC;AAEA,SAAKK,KAAL,CAAWC,KAAX,CAAiBV,CAAjB,GAAqB,KAAKjD,MAAL,CAAY0C,MAAjC;AACA,SAAKgB,KAAL,CAAWC,KAAX,CAAiBT,CAAjB,GAAqB,CAArB;AAEA,SAAKlD,MAAL,CAAY4D,sBAAZ;AACD;;AAEDC,EAAAA,UAAU,GAAG;AACX,QAAIhD,IAAI,GAAG,IAAX;AACA,SAAKkC,QAAL,GAAgB,IAAIpF,KAAK,CAACmG,cAAV,CAAyB;AACvCC,MAAAA,UAAU,EAAE;AACVC,QAAAA,WAAW,EAAE;AADH,OAD2B;AAIvCC,MAAAA,IAAI,EAAEtG,KAAK,CAACuG,UAJ2B;AAKvC5F,MAAAA,QAAQ,EAAE;AACR8B,QAAAA,IAAI,EAAE;AAAE+D,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SADE;AAERJ,QAAAA,QAAQ,EAAE;AAAEoC,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SAFF;AAGRiC,QAAAA,MAAM,EAAE;AAAED,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SAHA;AAIRkC,QAAAA,SAAS,EAAE;AAAEF,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SAJH;AAKRmC,QAAAA,MAAM,EAAE;AAAEH,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SALA;AAMRoC,QAAAA,MAAM,EAAE;AAAEJ,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SANA;AAORqC,QAAAA,UAAU,EAAE;AAAEL,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SAPJ;AAQRsC,QAAAA,KAAK,EAAE;AAAEN,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SARC;AASR1D,QAAAA,KAAK,EAAE;AAAE0F,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SATC;AAURuC,QAAAA,MAAM,EAAE;AAAEP,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE;AAApB,SAVA;AAWRwC,QAAAA,QAAQ,EAAE;AAAER,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE,KAAK7B,QAAL,CAAc,CAAd;AAApB,SAXF;AAYRsE,QAAAA,QAAQ,EAAE;AAAET,UAAAA,IAAI,EAAE,GAAR;AAAahC,UAAAA,KAAK,EAAE,KAAK7B,QAAL,CAAc,CAAd;AAApB,SAZF;AAaRuE,QAAAA,YAAY,EAAE;AACZV,UAAAA,IAAI,EAAE,GADM;AAEZhC,UAAAA,KAAK,EAAE,IAAIxE,KAAK,CAACyD,aAAV,GAA0BC,IAA1B,CAA+B,kBAA/B;AAFK,SAbN;AAiBR2B,QAAAA,UAAU,EAAE;AAAEmB,UAAAA,IAAI,EAAE,IAAR;AAAchC,UAAAA,KAAK,EAAE,IAAIxE,KAAK,CAACmH,OAAV;AAArB;AAjBJ,OAL6B;AAwBvC;AACAC,MAAAA,YAAY,EAAE,KAAK3G,MAzBoB;AA0BvC4G,MAAAA,cAAc,EAAE,KAAK3G;AA1BkB,KAAzB,CAAhB;AA6BA,SAAK4G,QAAL,GAAgB,IAAItH,KAAK,CAACuH,aAAV,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,CAAhB;AAEA,SAAKxB,KAAL,GAAa,IAAI/F,KAAK,CAACwH,IAAV,CAAe,KAAKF,QAApB,EAA8B,KAAKlC,QAAnC,CAAb;AACA,SAAK7E,KAAL,CAAWkE,GAAX,CAAe,KAAKsB,KAApB;AACD;;AAED0B,EAAAA,IAAI,GAAG;AACL,SAAK7E,MAAL,GAAc,IAAd;AACD;;AAED8E,EAAAA,IAAI,GAAG;AACL,SAAK9E,MAAL,GAAc,KAAd;AACA,SAAK+E,MAAL;AACD;;AAED3D,EAAAA,IAAI,GAAG;AACL,QAAI,KAAK4D,SAAT,EAAoB;AACpB,SAAKA,SAAL,GAAiB,IAAjB;AACA,QAAIC,GAAG,GAAG,KAAKlF,QAAL,CAAcmF,MAAxB;AACA,QAAIC,WAAW,GAAG,KAAKpF,QAAL,CAAc,CAAC,KAAKD,OAAL,GAAe,CAAhB,IAAqBmF,GAAnC,CAAlB;AACA,SAAKzC,QAAL,CAAczE,QAAd,CAAuBsG,QAAvB,CAAgCzC,KAAhC,GAAwCuD,WAAxC;AACA,QAAIC,EAAE,GAAG,IAAI/H,WAAJ,EAAT;AACA+H,IAAAA,EAAE,CAACC,EAAH,CAAM,KAAK7C,QAAL,CAAczE,QAAd,CAAuByD,QAA7B,EAAuC,KAAK7C,QAA5C,EAAsD;AACpDiD,MAAAA,KAAK,EAAE,CAD6C;AAEpD0D,MAAAA,IAAI,EAAEhI,MAAM,CAAC,KAAKuB,MAAN,CAFwC;AAGpD0G,MAAAA,UAAU,EAAE,MAAM;AAChBtF,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAKJ,OAAL,GAAe,CAAC,KAAKA,OAAL,GAAe,CAAhB,IAAqBmF,GAApC;AACA,aAAKzC,QAAL,CAAczE,QAAd,CAAuBqG,QAAvB,CAAgCxC,KAAhC,GAAwCuD,WAAxC;AACA,aAAK3C,QAAL,CAAczE,QAAd,CAAuByD,QAAvB,CAAgCI,KAAhC,GAAwC,CAAxC;AACA,aAAKoD,SAAL,GAAiB,KAAjB;AACD;AATmD,KAAtD;AAWD;;AACDD,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK/E,MAAT,EAAiB;AACjB,SAAKH,IAAL,IAAa,IAAb;AACA,SAAK2C,QAAL,CAAczE,QAAd,CAAuB8B,IAAvB,CAA4B+B,KAA5B,GAAoC,KAAK/B,IAAzC,CAHO,CAIP;;AAEA4B,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAK3D,QAAjB,EAA2BwC,OAA3B,CAAmCoB,IAAI,IAAI;AACzC,WAAKa,QAAL,CAAczE,QAAd,CAAuB4D,IAAvB,EAA6BC,KAA7B,GAAqC,KAAKP,QAAL,CAAcM,IAAd,CAArC;AACD,KAFD,EANO,CASP;AACA;AACA;;AAEA6D,IAAAA,qBAAqB,CAAC,KAAKT,MAAL,CAAY7C,IAAZ,CAAiB,IAAjB,CAAD,CAArB;AACA,SAAKlE,QAAL,CAAc+G,MAAd,CAAqB,KAAKpH,KAA1B,EAAiC,KAAK8B,MAAtC;AACD;;AACDsF,EAAAA,MAAM,GAAG;AACP,QAAIU,MAAM,GAAG,IAAIjI,MAAJ,CAAW;AACtBoB,MAAAA,KAAK,EAAE,IADe;AAEtBb,MAAAA,QAAQ,EAAE;AACR+F,QAAAA,SAAS,EAAE;AAAElC,UAAAA,KAAK,EAAE,GAAT;AAAcgC,UAAAA,IAAI,EAAE,GAApB;AAAyB9B,UAAAA,GAAG,EAAE,CAA9B;AAAiCC,UAAAA,GAAG,EAAE;AAAtC;AADH,OAFY;AAKtBjE,MAAAA,QAAQ,EAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALW,KAAX,CAAb;AAuCA,WACE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,SAAS,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,qBAAY,wTAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAiBD;;AA7Q4B;;AAgR/B,eAAeN,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { TimelineMax, Power2 } from \"gsap/all\";\nimport * as dat from \"dat.gui\";\n\nclass Sketch extends Component {\n  constructor(opts) {\n    super(opts);\n    this.scene = new THREE.Scene();\n    this.vertex = `varying vec2 vUv;void main() {vUv = uv;gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );}`;\n    this.fragment = opts.fragment;\n    this.uniforms = opts.uniforms;\n    this.renderer = new THREE.WebGLRenderer();\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(0xeeeeee, 1);\n    this.duration = opts.duration || 1;\n    this.debug = opts.debug || false;\n    this.easing = opts.easing || \"easeInOut\";\n  }\n\n  componentDidMount() {\n    this.clicker = document.getElementById(\"content\");\n\n    this.container = document.getElementById(\"slider\");\n    this.images = JSON.parse(this.container.getAttribute(\"data-images\"));\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    // this.container.appendChild(this.renderer.domElement);\n\n    this.camera = new THREE.PerspectiveCamera(\n      70,\n      window.innerWidth / window.innerHeight,\n      0.001,\n      1000\n    );\n\n    this.camera.position.set(0, 0, 2);\n    this.time = 0;\n    this.current = 0;\n    this.textures = [];\n\n    this.paused = true;\n    // this.initiate(() => {\n    //   console.log(this.textures);\n    //   this.setupResize();\n    //   this.settings();\n    //   this.addObjects();\n    //   this.resize();\n    //   this.clickEvent();\n    //   this.play();\n    // });\n    console.log(this.container);\n    console.log(this.images[0]);\n  }\n\n  initiate(cb) {\n    const promises = [];\n    let that = this;\n    this.images.forEach((url, i) => {\n      let promise = new Promise(resolve => {\n        that.textures[i] = new THREE.TextureLoader().load(url, resolve);\n      });\n      promises.push(promise);\n    });\n\n    Promise.all(promises).then(() => {\n      cb();\n    });\n  }\n\n  clickEvent() {\n    this.clicker.addEventListener(\"click\", () => {\n      this.next();\n    });\n  }\n\n  settings() {\n    let that = this;\n    if (this.debug) this.gui = new dat.GUI();\n    this.settings = { progress: 0.5 };\n    // if(this.debug) this.gui.add(this.settings, \"progress\", 0, 1, 0.01);\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.settings[item] = this.uniforms[item].value;\n      if (this.debug)\n        this.gui.add(\n          this.settings,\n          item,\n          this.uniforms[item].min,\n          this.uniforms[item].max,\n          0.01\n        );\n    });\n  }\n\n  setupResize() {\n    window.addEventListener(\"resize\", this.resize.bind(this));\n  }\n\n  resize() {\n    this.width = this.container.offsetWidth;\n    this.height = this.container.offsetHeight;\n    this.renderer.setSize(this.width, this.height);\n    this.camera.aspect = this.width / this.height;\n\n    // image cover\n    this.imageAspect =\n      this.textures[0].image.height / this.textures[0].image.width;\n    let a1;\n    let a2;\n    if (this.height / this.width > this.imageAspect) {\n      a1 = (this.width / this.height) * this.imageAspect;\n      a2 = 1;\n    } else {\n      a1 = 1;\n      a2 = this.height / this.width / this.imageAspect;\n    }\n\n    this.material.uniforms.resolution.value.x = this.width;\n    this.material.uniforms.resolution.value.y = this.height;\n    this.material.uniforms.resolution.value.z = a1;\n    this.material.uniforms.resolution.value.w = a2;\n\n    const dist = this.camera.position.z;\n    const height = 1;\n    this.camera.fov = 2 * (180 / Math.PI) * Math.atan(height / (2 * dist));\n\n    this.plane.scale.x = this.camera.aspect;\n    this.plane.scale.y = 1;\n\n    this.camera.updateProjectionMatrix();\n  }\n\n  addObjects() {\n    let that = this;\n    this.material = new THREE.ShaderMaterial({\n      extensions: {\n        derivatives: \"#extension GL_OES_standard_derivatives : enable\"\n      },\n      side: THREE.DoubleSide,\n      uniforms: {\n        time: { type: \"f\", value: 0 },\n        progress: { type: \"f\", value: 0 },\n        border: { type: \"f\", value: 0 },\n        intensity: { type: \"f\", value: 0 },\n        scaleX: { type: \"f\", value: 40 },\n        scaleY: { type: \"f\", value: 40 },\n        transition: { type: \"f\", value: 40 },\n        swipe: { type: \"f\", value: 0 },\n        width: { type: \"f\", value: 0 },\n        radius: { type: \"f\", value: 0 },\n        texture1: { type: \"f\", value: this.textures[0] },\n        texture2: { type: \"f\", value: this.textures[1] },\n        displacement: {\n          type: \"f\",\n          value: new THREE.TextureLoader().load(\"../img/disp1.jpg\")\n        },\n        resolution: { type: \"v4\", value: new THREE.Vector4() }\n      },\n      // wireframe: true,\n      vertexShader: this.vertex,\n      fragmentShader: this.fragment\n    });\n\n    this.geometry = new THREE.PlaneGeometry(1, 1, 2, 2);\n\n    this.plane = new THREE.Mesh(this.geometry, this.material);\n    this.scene.add(this.plane);\n  }\n\n  stop() {\n    this.paused = true;\n  }\n\n  play() {\n    this.paused = false;\n    this.render();\n  }\n\n  next() {\n    if (this.isRunning) return;\n    this.isRunning = true;\n    let len = this.textures.length;\n    let nextTexture = this.textures[(this.current + 1) % len];\n    this.material.uniforms.texture2.value = nextTexture;\n    let tl = new TimelineMax();\n    tl.to(this.material.uniforms.progress, this.duration, {\n      value: 1,\n      ease: Power2[this.easing],\n      onComplete: () => {\n        console.log(\"FINISH\");\n        this.current = (this.current + 1) % len;\n        this.material.uniforms.texture1.value = nextTexture;\n        this.material.uniforms.progress.value = 0;\n        this.isRunning = false;\n      }\n    });\n  }\n  render() {\n    if (this.paused) return;\n    this.time += 0.05;\n    this.material.uniforms.time.value = this.time;\n    // this.material.uniforms.progress.value = this.settings.progress;\n\n    Object.keys(this.uniforms).forEach(item => {\n      this.material.uniforms[item].value = this.settings[item];\n    });\n    // this.camera.position.z = 3;\n    // this.plane.rotation.y = 0.4*Math.sin(this.time)\n    // this.plane.rotation.x = 0.5*Math.sin(0.4*this.time)\n\n    requestAnimationFrame(this.render.bind(this));\n    this.renderer.render(this.scene, this.camera);\n  }\n  render() {\n    let sketch = new Sketch({\n      debug: true,\n      uniforms: {\n        intensity: { value: 0.3, type: \"f\", min: 0, max: 2 }\n      },\n      fragment: `\n\t\tuniform float time;\n\t\tuniform float progress;\n\t\tuniform float width;\n\t\tuniform float scaleX;\n\t\tuniform float scaleY;\n\t\tuniform float transition;\n\t\tuniform float radius;\n\t\tuniform float intensity;\n\t\tuniform sampler2D texture1;\n\t\tuniform sampler2D texture2;\n\t\tuniform sampler2D displacement;\n\t\tuniform vec4 resolution;\n\t\tvarying vec2 vUv;\n\n\t\tvoid main()\t{\n\t\t  vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\n         vec4 d1 = texture2D(texture1, newUV);\n         vec4 d2 = texture2D(texture2, newUV);\n\n         float displace1 = (d1.r + d1.g + d1.b)*0.33;\n         float displace2 = (d2.r + d2.g + d2.b)*0.33;\n         \n         vec4 t1 = texture2D(texture1, vec2(newUV.x, newUV.y + progress * (displace2 * intensity)));\n         vec4 t2 = texture2D(texture2, vec2(newUV.x, newUV.y + (1.0 - progress) * (displace1 * intensity)));\n\n         gl_FragColor = mix(t1, t2, progress);\n\n\t\t}\n\n\t`\n    });\n\n    return (\n      <div id=\"content\" className=\"content\">\n        <div\n          id=\"slider\"\n          data-images='[\n        \"https://images.unsplash.com/photo-1577337712775-34238fe04f69?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1950&q=80,\n        \"LaPrinciere5.jpg\",\n        \"LaPrinciere3.jpg\",\n        \"LaPrinciere4.jpg\",\n        \"LaPrinciere-Web1.jpg\",\n        \"LaPrinciere-Web5.jpg\",\n        \"LaPrinciere-Web4.jpg\",\n        \"LaPrinciere-Web3.jpg\"\n    ]'\n        ></div>\n      </div>\n    );\n  }\n}\n\nexport default Sketch;\n"]},"metadata":{},"sourceType":"module"}