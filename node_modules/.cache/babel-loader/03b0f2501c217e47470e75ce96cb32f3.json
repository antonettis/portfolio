{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/ProjectPreview.jsx\";\nimport React from \"react\";\nimport * as PIXI from \"pixi.js\";\nimport { Stage, Sprite } from \"@inlet/react-pixi\";\nconst img = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/snake.png\";\n\nclass Preview extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.count = 0;\n    this.state = {\n      ropeLength: 45,\n      points: [],\n      showSpine: true\n    };\n\n    this.tick = delta => {\n      this.count += 0.1 * delta;\n      const points = this.state.points;\n\n      for (var i = 0; i < points.length; i++) {\n        points[i].y = Math.sin(i * 0.5 + this.count) * 30;\n        points[i].x = i * this.state.ropeLength + Math.cos(i * 0.3 + this.count) * 20;\n      }\n\n      this.setState({\n        points\n      });\n    };\n\n    this.toggleSpine = () => {\n      this.setState(({\n        showSpine\n      }) => ({\n        showSpine: !showSpine\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // build rope\n    const points = [];\n\n    for (var i = 0; i < 25; i++) {\n      points.push(new PIXI.Point(i * this.state.ropeLength, 0));\n    }\n\n    this.setState({\n      points\n    });\n    this.props.app.ticker.add(this.tick);\n  }\n\n  componentWillUnmount() {\n    this.props.app.ticker.remove(this.tick);\n  }\n\n  render() {\n    return React.createElement(Container, {\n      x: 50,\n      y: 300,\n      scale: [0.6, 0.6],\n      interactive: true,\n      pointerdown: this.toggleSpine,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.state.points.length > 0 && React.createElement(SimpleRope, {\n      image: img,\n      points: this.state.points,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.state.showSpine && React.createElement(Graphics, {\n      draw: g => {\n        const points = this.state.points;\n        g.clear();\n        const startX = points[0] ? points[0].x : 0;\n        const startY = points[0] ? points[0].y : 0;\n        g.lineStyle(2, 0xffc2c2);\n        g.moveTo(startX, startY);\n\n        for (var i = 1; i < points.length; i++) {\n          g.lineTo(points[i].x, points[i].y);\n        }\n\n        for (var i = 1; i < points.length; i++) {\n          g.beginFill(0xff0022);\n          g.drawCircle(points[i].x, points[i].y, 10);\n          g.endFill();\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst ProjectPreview = () => React.createElement(Stage, {\n  width: 800,\n  height: 600,\n  options: {\n    backgroundColor: 0x012b30\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, React.createElement(Preview, {\n  app: app,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}), \"}\");\n\nexport default ProjectPreview;","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/ProjectPreview.jsx"],"names":["React","PIXI","Stage","Sprite","img","Preview","Component","count","state","ropeLength","points","showSpine","tick","delta","i","length","y","Math","sin","x","cos","setState","toggleSpine","componentDidMount","push","Point","props","app","ticker","add","componentWillUnmount","remove","render","g","clear","startX","startY","lineStyle","moveTo","lineTo","beginFill","drawCircle","endFill","ProjectPreview","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as PIXI from \"pixi.js\";\nimport { Stage, Sprite } from \"@inlet/react-pixi\";\n\nconst img = \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/693612/snake.png\";\n\nclass Preview extends React.Component {\n  count = 0;\n\n  state = {\n    ropeLength: 45,\n    points: [],\n    showSpine: true\n  };\n\n  componentDidMount() {\n    // build rope\n    const points = [];\n\n    for (var i = 0; i < 25; i++) {\n      points.push(new PIXI.Point(i * this.state.ropeLength, 0));\n    }\n\n    this.setState({ points });\n    this.props.app.ticker.add(this.tick);\n  }\n\n  componentWillUnmount() {\n    this.props.app.ticker.remove(this.tick);\n  }\n\n  tick = delta => {\n    this.count += 0.1 * delta;\n\n    const points = this.state.points;\n\n    for (var i = 0; i < points.length; i++) {\n      points[i].y = Math.sin(i * 0.5 + this.count) * 30;\n      points[i].x =\n        i * this.state.ropeLength + Math.cos(i * 0.3 + this.count) * 20;\n    }\n\n    this.setState({ points });\n  };\n\n  toggleSpine = () => {\n    this.setState(({ showSpine }) => ({ showSpine: !showSpine }));\n  };\n\n  render() {\n    return (\n      <Container\n        x={50}\n        y={300}\n        scale={[0.6, 0.6]}\n        interactive={true}\n        pointerdown={this.toggleSpine}\n      >\n        {this.state.points.length > 0 && (\n          <SimpleRope image={img} points={this.state.points} />\n        )}\n\n        {this.state.showSpine && (\n          <Graphics\n            draw={g => {\n              const { points } = this.state;\n\n              g.clear();\n\n              const startX = points[0] ? points[0].x : 0;\n              const startY = points[0] ? points[0].y : 0;\n\n              g.lineStyle(2, 0xffc2c2);\n              g.moveTo(startX, startY);\n\n              for (var i = 1; i < points.length; i++) {\n                g.lineTo(points[i].x, points[i].y);\n              }\n\n              for (var i = 1; i < points.length; i++) {\n                g.beginFill(0xff0022);\n                g.drawCircle(points[i].x, points[i].y, 10);\n                g.endFill();\n              }\n            }}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nconst ProjectPreview = () => (\n  <Stage width={800} height={600} options={{ backgroundColor: 0x012b30 }}>\n    <Preview app={app} />}\n  </Stage>\n);\n\nexport default ProjectPreview;\n"]},"metadata":{},"sourceType":"module"}