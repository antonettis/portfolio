{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/PreviewSlide.jsx\";\nimport React from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport timeLoop from \"./TimeLoop\";\nimport LaPrinciere from \"../img/la-princiere.jpg\";\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\nprecision highp float;\nvarying vec2 uv;\nuniform sampler2D t;\nuniform vec2 mouse;\nuniform float time, amp, freq, moving;\nvec2 lookup (vec2 offset, float amp2) {\n  return mod(\n    uv + amp2 * amp * vec2(\n      cos(freq*(uv.x+offset.x)+time),\n      sin(freq*(uv.y+offset.x)+time))\n      + vec2(\n        moving * time/10.0,\n        0.0),\n    vec2(1.0));\n}\nvoid main() {\n  float dist = distance(uv, mouse);\n  float amp2 = pow(1.0 - dist, 2.0);\n  float colorSeparation = 0.02 * mix(amp2, 1.0, 0.5);\n  vec2 orientation = vec2(1.0, 0.0);\n  float a = (1.0-min(0.95, pow(1.8 * distance(uv, mouse), 4.0) +\n  0.5 * pow(distance(fract(50.0 * uv.y), 0.5), 2.0)));\n  gl_FragColor = vec4(a * vec3(\n    texture2D(t, lookup(colorSeparation * orientation, amp2)).r,\n    texture2D(t, lookup(-colorSeparation * orientation, amp2)).g,\n    texture2D(t, lookup(vec2(0.0), amp2)).b),\n    1.0);\n}\n`\n  }\n});\nconst Vignette = timeLoop(({\n  children: t,\n  time,\n  mouse\n}) => React.createElement(Node, {\n  shader: shaders.vignetteColorSeparationDistortion,\n  uniforms: {\n    t,\n    time: time / 1000,\n    // seconds is better for float precision\n    mouse,\n    freq: 10 + 2 * Math.sin(0.0007 * time),\n    amp: 0.05 + Math.max(0, 0.03 * Math.cos(0.001 * time)),\n    moving: 0\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}));\n\nclass Slide extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mouse: [0.5, 0.5]\n    };\n  }\n\n  render() {\n    const mouse = this.state.mouse;\n    return React.createElement(Vignette, {\n      mouse: mouse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, LaPrinciere, \"https://i.imgur.com/2VP5osy.jpg\");\n  }\n\n}\n\nexport default Slide;","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/PreviewSlide.jsx"],"names":["React","Shaders","Node","GLSL","timeLoop","LaPrinciere","shaders","create","vignetteColorSeparationDistortion","frag","Vignette","children","t","time","mouse","freq","Math","sin","amp","max","cos","moving","Slide","Component","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,UAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,MAAMC,OAAO,GAAGL,OAAO,CAACM,MAAR,CAAe;AAC7BC,EAAAA,iCAAiC,EAAE;AACjCC,IAAAA,IAAI,EAAEN,IAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADsB;AADN,CAAf,CAAhB;AAmCA,MAAMO,QAAQ,GAAGN,QAAQ,CAAC,CAAC;AAAEO,EAAAA,QAAQ,EAAEC,CAAZ;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAAD,KACxB,oBAAC,IAAD;AACE,EAAA,MAAM,EAAER,OAAO,CAACE,iCADlB;AAEE,EAAA,QAAQ,EAAE;AACRI,IAAAA,CADQ;AAERC,IAAAA,IAAI,EAAEA,IAAI,GAAG,IAFL;AAEW;AACnBC,IAAAA,KAHQ;AAIRC,IAAAA,IAAI,EAAE,KAAK,IAAIC,IAAI,CAACC,GAAL,CAAS,SAASJ,IAAlB,CAJP;AAKRK,IAAAA,GAAG,EAAE,OAAOF,IAAI,CAACG,GAAL,CAAS,CAAT,EAAY,OAAOH,IAAI,CAACI,GAAL,CAAS,QAAQP,IAAjB,CAAnB,CALJ;AAMRQ,IAAAA,MAAM,EAAE;AANA,GAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADuB,CAAzB;;AAcA,MAAMC,KAAN,SAAoBtB,KAAK,CAACuB,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNV,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN;AADD,KAD0B;AAAA;;AAKlCW,EAAAA,MAAM,GAAG;AAAA,UACCX,KADD,GACW,KAAKU,KADhB,CACCV,KADD;AAEP,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGT,WAFH,oCADF;AAOD;;AAdiC;;AAiBpC,eAAeiB,KAAf","sourcesContent":["import React from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport timeLoop from \"./TimeLoop\";\nimport LaPrinciere from \"../img/la-princiere.jpg\";\n\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\nprecision highp float;\nvarying vec2 uv;\nuniform sampler2D t;\nuniform vec2 mouse;\nuniform float time, amp, freq, moving;\nvec2 lookup (vec2 offset, float amp2) {\n  return mod(\n    uv + amp2 * amp * vec2(\n      cos(freq*(uv.x+offset.x)+time),\n      sin(freq*(uv.y+offset.x)+time))\n      + vec2(\n        moving * time/10.0,\n        0.0),\n    vec2(1.0));\n}\nvoid main() {\n  float dist = distance(uv, mouse);\n  float amp2 = pow(1.0 - dist, 2.0);\n  float colorSeparation = 0.02 * mix(amp2, 1.0, 0.5);\n  vec2 orientation = vec2(1.0, 0.0);\n  float a = (1.0-min(0.95, pow(1.8 * distance(uv, mouse), 4.0) +\n  0.5 * pow(distance(fract(50.0 * uv.y), 0.5), 2.0)));\n  gl_FragColor = vec4(a * vec3(\n    texture2D(t, lookup(colorSeparation * orientation, amp2)).r,\n    texture2D(t, lookup(-colorSeparation * orientation, amp2)).g,\n    texture2D(t, lookup(vec2(0.0), amp2)).b),\n    1.0);\n}\n`\n  }\n});\n\nconst Vignette = timeLoop(({ children: t, time, mouse }) => (\n  <Node\n    shader={shaders.vignetteColorSeparationDistortion}\n    uniforms={{\n      t,\n      time: time / 1000, // seconds is better for float precision\n      mouse,\n      freq: 10 + 2 * Math.sin(0.0007 * time),\n      amp: 0.05 + Math.max(0, 0.03 * Math.cos(0.001 * time)),\n      moving: 0\n    }}\n  />\n));\n\nclass Slide extends React.Component {\n  state = {\n    mouse: [0.5, 0.5]\n  };\n\n  render() {\n    const { mouse } = this.state;\n    return (\n      <Vignette mouse={mouse}>\n        {/* <img src={LaPrinciere} alt=\"\" /> */}\n        {LaPrinciere}\n        https://i.imgur.com/2VP5osy.jpg\n      </Vignette>\n    );\n  }\n}\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}