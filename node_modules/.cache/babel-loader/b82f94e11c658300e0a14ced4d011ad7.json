{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/PreviewSlide.jsx\";\nimport React from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\nprecision highp float;\nvarying vec2 uv;\nuniform sampler2D t;\nuniform vec2 mouse;\nuniform float time, amp, freq, moving;\nvec2 lookup (vec2 offset, float amp2) {\n  return mod(\n    uv + amp2 * amp * vec2(\n      cos(freq*(uv.x+offset.x)+time),\n      sin(freq*(uv.y+offset.x)+time))\n      + vec2(\n        moving * time/10.0,\n        0.0),\n    vec2(1.0));\n}\nvoid main() {\n  float dist = distance(uv, mouse);\n  float amp2 = pow(1.0 - dist, 2.0);\n  float colorSeparation = 0.02 * mix(amp2, 1.0, 0.5);\n  vec2 orientation = vec2(1.0, 0.0);\n  float a = (1.0-min(0.95, pow(1.8 * distance(uv, mouse), 4.0) +\n  0.5 * pow(distance(fract(50.0 * uv.y), 0.5), 2.0)));\n  gl_FragColor = vec4(a * vec3(\n    texture2D(t, lookup(colorSeparation * orientation, amp2)).r,\n    texture2D(t, lookup(-colorSeparation * orientation, amp2)).g,\n    texture2D(t, lookup(vec2(0.0), amp2)).b),\n    1.0);\n}\n`\n  }\n});\n\nclass Slide extends React.Component {\n  render() {\n    const blue = this.props.blue;\n    return React.createElement(Node, {\n      shader: shaders.helloBlue,\n      uniforms: {\n        blue\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Slide;","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/PreviewSlide.jsx"],"names":["React","Shaders","Node","GLSL","shaders","create","vignetteColorSeparationDistortion","frag","Slide","Component","render","blue","props","helloBlue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,IAAxB,QAAoC,UAApC;AAEA,MAAMC,OAAO,GAAGH,OAAO,CAACI,MAAR,CAAe;AAC7BC,EAAAA,iCAAiC,EAAE;AACjCC,IAAAA,IAAI,EAAEJ,IAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADsB;AADN,CAAf,CAAhB;;AAmCA,MAAMK,KAAN,SAAoBR,KAAK,CAACS,SAA1B,CAAoC;AAClCC,EAAAA,MAAM,GAAG;AAAA,UACCC,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAEP,WAAO,oBAAC,IAAD;AAAM,MAAA,MAAM,EAAEP,OAAO,CAACS,SAAtB;AAAiC,MAAA,QAAQ,EAAE;AAAEF,QAAAA;AAAF,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAJiC;;AAOpC,eAAeH,KAAf","sourcesContent":["import React from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\n\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\nprecision highp float;\nvarying vec2 uv;\nuniform sampler2D t;\nuniform vec2 mouse;\nuniform float time, amp, freq, moving;\nvec2 lookup (vec2 offset, float amp2) {\n  return mod(\n    uv + amp2 * amp * vec2(\n      cos(freq*(uv.x+offset.x)+time),\n      sin(freq*(uv.y+offset.x)+time))\n      + vec2(\n        moving * time/10.0,\n        0.0),\n    vec2(1.0));\n}\nvoid main() {\n  float dist = distance(uv, mouse);\n  float amp2 = pow(1.0 - dist, 2.0);\n  float colorSeparation = 0.02 * mix(amp2, 1.0, 0.5);\n  vec2 orientation = vec2(1.0, 0.0);\n  float a = (1.0-min(0.95, pow(1.8 * distance(uv, mouse), 4.0) +\n  0.5 * pow(distance(fract(50.0 * uv.y), 0.5), 2.0)));\n  gl_FragColor = vec4(a * vec3(\n    texture2D(t, lookup(colorSeparation * orientation, amp2)).r,\n    texture2D(t, lookup(-colorSeparation * orientation, amp2)).g,\n    texture2D(t, lookup(vec2(0.0), amp2)).b),\n    1.0);\n}\n`\n  }\n});\n\nclass Slide extends React.Component {\n  render() {\n    const { blue } = this.props;\n    return <Node shader={shaders.helloBlue} uniforms={{ blue }} />;\n  }\n}\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}