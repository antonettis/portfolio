{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = invariantNoDependentsLoop;\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _Node = _interopRequireDefault(require(\"../Node\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // check that base does not exist in node dependents graph\n\n\nfunction invariantNoDependentsLoop(base, node) {\n  (0, _invariant.default)(base !== node, \"gl-react: Found a loop in the rendering graph.\\n\" + \"If you want to get back previous state, please use `backbuffering` instead\");\n\n  if (node instanceof _Node.default) {\n    for (let i = 0; i < node.dependents.length; i++) {\n      invariantNoDependentsLoop(base, node.dependents[i]);\n    }\n  }\n}","map":{"version":3,"sources":["../../src/helpers/invariantNoDependentsLoop.js"],"names":["base","node","Node","i","invariantNoDependentsLoop"],"mappings":";;;;;;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,SAAA,CAAA,CAAA;;;;;;EAIA;;;AACe,SAAA,yBAAA,CAAA,IAAA,EAAA,IAAA,EAGP;AACN,GAAA,GAAA,UAAA,CAAA,OAAA,EACEA,IAAI,KADN,IAAA,EAEE,qDAFF,4EAAA;;AAKA,MAAIC,IAAI,YAAYC,KAAAA,CAApB,OAAA,EAA0B;AACxB,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGF,IAAI,CAAJA,UAAAA,CAApB,MAAA,EAA4CE,CAA5C,EAAA,EAAiD;AAC/CC,MAAAA,yBAAyB,CAAA,IAAA,EAAOH,IAAI,CAAJA,UAAAA,CAAhCG,CAAgCH,CAAP,CAAzBG;AACD;AACF;AACF","sourcesContent":["//@flow\nimport invariant from \"invariant\";\nimport Node from \"../Node\";\nimport type { Surface } from \"../createSurface\";\nimport type Bus from \"../Bus\";\n\n// check that base does not exist in node dependents graph\nexport default function invariantNoDependentsLoop(\n  base: Bus | Node,\n  node: Node | Surface\n): void {\n  invariant(\n    base !== node,\n    \"gl-react: Found a loop in the rendering graph.\\n\" +\n      \"If you want to get back previous state, please use `backbuffering` instead\"\n  );\n  if (node instanceof Node) {\n    for (let i = 0; i < node.dependents.length; i++) {\n      invariantNoDependentsLoop(base, node.dependents[i]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}