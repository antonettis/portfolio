{"ast":null,"code":"var _jsxFileName = \"/Users/serenaantonetti/portfolio-2019/src/components/PreviewSlide.js\";\nimport React from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport { Surface } from \"gl-react-dom\";\nimport timeLoop from \"./TimeLoop\";\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\n    uniform float time;\n    uniform float progress;\n    uniform float width;\n    uniform float scaleX;\n    uniform float scaleY;\n    uniform float transition;\n    uniform float radius;\n    uniform float intensity;\n    varying vec2 vUv;\n\n    void main()\t{\n      vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\n     vec4 d1 = texture2D(texture1, newUV);\n     vec4 d2 = texture2D(texture2, newUV);\n\n     float displace1 = (d1.r + d1.g + d1.b)*0.33;\n     float displace2 = (d2.r + d2.g + d2.b)*0.33;\n     \n     vec4 t1 = texture2D(texture1, vec2(newUV.x, newUV.y + progress * (displace2 * intensity)));\n     vec4 t2 = texture2D(texture2, vec2(newUV.x, newUV.y + (1.0 - progress) * (displace1 * intensity)));\n\n     gl_FragColor = mix(t1, t2, progress);\n\n    }\n  `\n  }\n});\nconst Vignette = timeLoop(({\n  children: t,\n  time,\n  mouse\n}) => React.createElement(Node, {\n  shader: shaders.vignetteColorSeparationDistortion,\n  uniforms: {\n    time: {\n      type: \"f\",\n      value: 0\n    },\n    progress: {\n      type: \"f\",\n      value: 0\n    },\n    border: {\n      type: \"f\",\n      value: 0\n    },\n    intensity: {\n      type: \"f\",\n      value: 0\n    },\n    scaleX: {\n      type: \"f\",\n      value: 40\n    },\n    scaleY: {\n      type: \"f\",\n      value: 40\n    },\n    transition: {\n      type: \"f\",\n      value: 40\n    },\n    swipe: {\n      type: \"f\",\n      value: 0\n    },\n    width: {\n      type: \"f\",\n      value: 0\n    },\n    radius: {\n      type: \"f\",\n      value: 0\n    }\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}));\n\nclass Slide extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      mouse: [0.5, 0.5]\n    };\n\n    this.onMouseMove = e => {\n      const rect = e.target.getBoundingClientRect();\n      this.setState({\n        mouse: [(e.clientX - rect.left) / rect.width, (rect.bottom - e.clientY) / rect.height]\n      });\n    };\n  }\n\n  render() {\n    const mouse = this.state.mouse;\n    return React.createElement(Surface, {\n      width: 500,\n      height: 400,\n      onMouseMove: this.onMouseMove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Vignette, {\n      mouse: mouse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"https://i.imgur.com/2VP5osy.jpg\"));\n  }\n\n}\n\nexport default Slide;","map":{"version":3,"sources":["/Users/serenaantonetti/portfolio-2019/src/components/PreviewSlide.js"],"names":["React","Shaders","Node","GLSL","Surface","timeLoop","shaders","create","vignetteColorSeparationDistortion","frag","Vignette","children","t","time","mouse","type","value","progress","border","intensity","scaleX","scaleY","transition","swipe","width","radius","Slide","Component","state","onMouseMove","e","rect","target","getBoundingClientRect","setState","clientX","left","bottom","clientY","height","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Shaders, Node, GLSL } from \"gl-react\";\nimport { Surface } from \"gl-react-dom\";\nimport timeLoop from \"./TimeLoop\";\n\nconst shaders = Shaders.create({\n  vignetteColorSeparationDistortion: {\n    frag: GLSL`\n    uniform float time;\n    uniform float progress;\n    uniform float width;\n    uniform float scaleX;\n    uniform float scaleY;\n    uniform float transition;\n    uniform float radius;\n    uniform float intensity;\n    varying vec2 vUv;\n\n    void main()\t{\n      vec2 newUV = (vUv - vec2(0.5))*resolution.zw + vec2(0.5);\n\n     vec4 d1 = texture2D(texture1, newUV);\n     vec4 d2 = texture2D(texture2, newUV);\n\n     float displace1 = (d1.r + d1.g + d1.b)*0.33;\n     float displace2 = (d2.r + d2.g + d2.b)*0.33;\n     \n     vec4 t1 = texture2D(texture1, vec2(newUV.x, newUV.y + progress * (displace2 * intensity)));\n     vec4 t2 = texture2D(texture2, vec2(newUV.x, newUV.y + (1.0 - progress) * (displace1 * intensity)));\n\n     gl_FragColor = mix(t1, t2, progress);\n\n    }\n  `\n  }\n});\n\nconst Vignette = timeLoop(({ children: t, time, mouse }) => (\n  <Node\n    shader={shaders.vignetteColorSeparationDistortion}\n    uniforms={{\n      time: { type: \"f\", value: 0 },\n      progress: { type: \"f\", value: 0 },\n      border: { type: \"f\", value: 0 },\n      intensity: { type: \"f\", value: 0 },\n      scaleX: { type: \"f\", value: 40 },\n      scaleY: { type: \"f\", value: 40 },\n      transition: { type: \"f\", value: 40 },\n      swipe: { type: \"f\", value: 0 },\n      width: { type: \"f\", value: 0 },\n      radius: { type: \"f\", value: 0 }\n    }}\n  />\n));\n\nclass Slide extends React.Component {\n  state = {\n    mouse: [0.5, 0.5]\n  };\n  render() {\n    const { mouse } = this.state;\n    return (\n      <Surface width={500} height={400} onMouseMove={this.onMouseMove}>\n        <Vignette mouse={mouse}>https://i.imgur.com/2VP5osy.jpg</Vignette>\n      </Surface>\n    );\n  }\n  onMouseMove = e => {\n    const rect = e.target.getBoundingClientRect();\n    this.setState({\n      mouse: [\n        (e.clientX - rect.left) / rect.width,\n        (rect.bottom - e.clientY) / rect.height\n      ]\n    });\n  };\n}\n\nexport default Slide;\n"]},"metadata":{},"sourceType":"module"}