{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/Users/serenaantonetti/portfolio-2019/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * A High Order Component (HOC) function that provides\n * the contextual `width` and `height` props to a GL Component.\n * It also merge optional width,height props to override the contextual size\n * @function connectSize\n * @param GLComponent - a React Component that receives width and height props\n * @returns {ReactClass<*>} a Component that merge width and height props\n * with context and renders `GLComponent`.\n * @example\n *  const Foo = ({ width, height }) => <Node uniforms={{ width, height }} />;\n *  const FooConnected = connectSize(Foo);\n *  <FooConnected /> // you don't have to provide width, height.\n *  <FooConnected width={64} height={64} /> // If you do, you override width,height in the context as well, so <Node> is implicitly receiving the new width/height.\n */\n\n\nconst connectSize = GLComponent => {\n  var _class, _temp;\n\n  return _temp = _class = class extends _react.Component {\n    constructor(...args) {\n      super(...args);\n\n      _defineProperty(this, \"context\", void 0);\n    }\n\n    getGLSize() {\n      const _this$props = this.props,\n            width = _this$props.width,\n            height = _this$props.height,\n            glSizable = this.context.glSizable;\n      if (width && height) return [width, height];\n\n      const _glSizable$getGLSize = glSizable.getGLSize(),\n            _glSizable$getGLSize2 = _slicedToArray(_glSizable$getGLSize, 2),\n            cw = _glSizable$getGLSize2[0],\n            ch = _glSizable$getGLSize2[1];\n\n      return [width || cw, height || ch];\n    }\n\n    getChildContext() {\n      return {\n        glSizable: this\n      };\n    }\n\n    render() {\n      const onConnectSizeComponentRef = this.props.onConnectSizeComponentRef;\n\n      const _this$getGLSize = this.getGLSize(),\n            _this$getGLSize2 = _slicedToArray(_this$getGLSize, 2),\n            width = _this$getGLSize2[0],\n            height = _this$getGLSize2[1];\n\n      return _react.default.createElement(GLComponent, _extends({\n        ref: onConnectSizeComponentRef\n      }, this.props, {\n        width: width,\n        height: height\n      }));\n    }\n\n  }, _defineProperty(_class, \"displayName\", `connectSize(${GLComponent.displayName || GLComponent.name || \"?\"})`), _defineProperty(_class, \"propTypes\", {\n    width: _propTypes.default.number,\n    height: _propTypes.default.number\n  }), _defineProperty(_class, \"contextTypes\", {\n    glSizable: _propTypes.default.object.isRequired\n  }), _defineProperty(_class, \"childContextTypes\", {\n    glSizable: _propTypes.default.object.isRequired\n  }), _temp;\n};\n\nvar _default = connectSize;\nexports.default = _default;","map":{"version":3,"sources":["../src/connectSize.js"],"names":["connectSize","GLComponent","Component","width","PropTypes","height","number","glSizable","isRequired","getGLSize","props","context","getChildContext","render","onConnectSizeComponentRef"],"mappings":";;;;;;;;;AACA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,UAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;AAcA,MAAMA,WAAW,GAAIC,WAAD,IAAA;AAAA,MAAA,MAAA,EAAA,KAAA;;AAAA,SAAA,KAAA,GAAA,MAAA,GAClB,cAAcC,MAAAA,CAAd,SAAA,CAKG;AAAA,IAAA,WAAA,CAAA,GAAA,IAAA,EAAA;AAAA,YAAA,GAAA,IAAA;;AAAA,MAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;AAAA;;AAiBDO,IAAAA,SAAS,GAAqB;AAAA,0BAC5B,IAD4B,CAE1BC,KAF0B;AAAA,YAEnB,KAFmB,eAEnB,KAFmB;AAAA,YAEVL,MAFU,eAEVA,MAFU;AAAA,YAGfE,SAHe,GAC5B,IAD4B,CAG1BI,OAH0B,CAGfJ,SAHe;AAK5B,UAAIJ,KAAK,IAAT,MAAA,EAAqB,OAAO,CAAA,KAAA,EAAP,MAAO,CAAP;;AALO,mCAMXI,SAAS,CAA1B,SAAiBA,EANW;AAAA;AAAA,YAMtB,EANsB;AAAA,YAMtB,EANsB;;AAO5B,aAAO,CAACJ,KAAK,IAAN,EAAA,EAAcE,MAAM,IAA3B,EAAO,CAAP;AACD;;AACDO,IAAAA,eAAe,GAAG;AAChB,aAAO;AACLL,QAAAA,SAAS,EAAE;AADN,OAAP;AAGD;;AACDM,IAAAA,MAAM,GAAG;AAAA,YACCC,yBADD,GAC+B,KAAtC,KADO,CACCA,yBADD;;AAAA,8BAEiB,KAAxB,SAAwB,EAFjB;AAAA;AAAA,YAED,KAFC;AAAA,YAED,MAFC;;AAGP,aACE,MAAA,CAAA,OAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,QAAA,GAAG,EAAEA;AADP,OAAA,EAEM,KAFN,KAAA,EAAA;AAGE,QAAA,KAAK,EAHP,KAAA;AAIE,QAAA,MAAM,EAAET;AAJV,OAAA,CAAA,CADF;AAQD;;AA1CA,GANe,EAAA,eAAA,CAAA,MAAA,EAAA,aAAA,EAUM,eAAcJ,WAAW,CAAXA,WAAAA,IAClCA,WAAW,CADuBA,IAAAA,IAElC,GAZc,GAAA,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,WAAA,EAaG;AACjBE,IAAAA,KAAK,EAAEC,UAAAA,CAAAA,OAAAA,CADU,MAAA;AAEjBC,IAAAA,MAAM,EAAED,UAAAA,CAAAA,OAAAA,CAAUE;AAFD,GAbH,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,cAAA,EAiBM;AACpBC,IAAAA,SAAS,EAAEH,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAiBI;AADR,GAjBN,CAAA,EAAA,eAAA,CAAA,MAAA,EAAA,mBAAA,EAoBW;AACzBD,IAAAA,SAAS,EAAEH,UAAAA,CAAAA,OAAAA,CAAAA,MAAAA,CAAiBI;AADH,GApBX,CAAA,EAAA,KAAA;AAApB,CAAA;;eAmDeR,W","sourcesContent":["//@flow\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * A High Order Component (HOC) function that provides\n * the contextual `width` and `height` props to a GL Component.\n * It also merge optional width,height props to override the contextual size\n * @function connectSize\n * @param GLComponent - a React Component that receives width and height props\n * @returns {ReactClass<*>} a Component that merge width and height props\n * with context and renders `GLComponent`.\n * @example\n *  const Foo = ({ width, height }) => <Node uniforms={{ width, height }} />;\n *  const FooConnected = connectSize(Foo);\n *  <FooConnected /> // you don't have to provide width, height.\n *  <FooConnected width={64} height={64} /> // If you do, you override width,height in the context as well, so <Node> is implicitly receiving the new width/height.\n */\nconst connectSize = (GLComponent: *) =>\n  class extends Component<{\n    width?: number,\n    height?: number,\n    children?: any,\n    onConnectSizeComponentRef?: (ref: GLComponent) => void\n  }> {\n    context: {\n      glSizable: { +getGLSize: () => [number, number] }\n    };\n    static displayName = `connectSize(${GLComponent.displayName ||\n      GLComponent.name ||\n      \"?\"})`;\n    static propTypes = {\n      width: PropTypes.number,\n      height: PropTypes.number\n    };\n    static contextTypes = {\n      glSizable: PropTypes.object.isRequired\n    };\n    static childContextTypes = {\n      glSizable: PropTypes.object.isRequired\n    };\n    getGLSize(): [number, number] {\n      const {\n        props: { width, height },\n        context: { glSizable }\n      } = this;\n      if (width && height) return [width, height];\n      const [cw, ch] = glSizable.getGLSize();\n      return [width || cw, height || ch];\n    }\n    getChildContext() {\n      return {\n        glSizable: this\n      };\n    }\n    render() {\n      const { onConnectSizeComponentRef } = this.props;\n      const [width, height] = this.getGLSize();\n      return (\n        <GLComponent\n          ref={onConnectSizeComponentRef}\n          {...this.props}\n          width={width}\n          height={height}\n        />\n      );\n    }\n  };\n\nexport default connectSize;\n"]},"metadata":{},"sourceType":"script"}