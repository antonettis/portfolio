{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * LoadersRegistry\n * loaders can define a static priority number. more high is priority, more important the loader is to be used first.\n */\n\n\nclass LoadersRegistry {\n  constructor() {\n    _defineProperty(this, \"_loaders\", []);\n  }\n  /**\n   * Add a TextureLoader class to extend texture format support.\n   */\n\n\n  add(loader) {\n    this._loaders.push(loader);\n\n    this._loaders.sort((a, b) => // $FlowFixMe\n    (typeof b.priority === \"number\" ? b.priority : 0) - ( // $FlowFixMe\n    typeof a.priority === \"number\" ? a.priority : 0));\n  }\n  /**\n   * Remove a previously added WebGLTextureLoader class.\n   */\n\n\n  remove(loader) {\n    const i = this._loaders.indexOf(loader);\n\n    if (i !== -1) {\n      this._loaders.splice(i, 1);\n    }\n  }\n  /**\n   * List the loaders ordered by most priority first\n   */\n\n\n  get() {\n    return this._loaders;\n  }\n\n}\n\nexports.default = LoadersRegistry;","map":{"version":3,"sources":["../src/LoadersRegistry.js"],"names":["add","b","a","remove","i","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAGA;;;;;;AAIe,MAAA,eAAA,CAAsB;AAAA,EAAA,WAAA,GAAA;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,EAAA,CAAA;AAAA;AAGnC;;;;;AAGAA,EAAAA,GAAG,CAAA,MAAA,EAAyC;AAC1C,SAAA,QAAA,CAAA,IAAA,CAAA,MAAA;;AACA,SAAA,QAAA,CAAA,IAAA,CACE,CAAA,CAAA,EAAA,CAAA,KACE;AACA,KAAC,OAAOC,CAAC,CAAR,QAAA,KAAA,QAAA,GAAiCA,CAAC,CAAlC,QAAA,GAAD,CAAA,MACA;AACC,WAAOC,CAAC,CAAR,QAAA,KAAA,QAAA,GAAiCA,CAAC,CAAlC,QAAA,GALL,CAGI,CAHJ;AAOD;AAED;;;;;AAGAC,EAAAA,MAAM,CAAA,MAAA,EAAyC;AAC7C,UAAMC,CAAC,GAAG,KAAA,QAAA,CAAA,OAAA,CAAV,MAAU,CAAV;;AACA,QAAIA,CAAC,KAAK,CAAV,CAAA,EAAc;AACZ,WAAA,QAAA,CAAA,MAAA,CAAA,CAAA,EAAA,CAAA;AACD;AACF;AAED;;;;;AAGAC,EAAAA,GAAG,GAAG;AACJ,WAAO,KAAP,QAAA;AACD;;AAhCkC","sourcesContent":["//@flow\nimport type WebGLTextureLoader from \"./WebGLTextureLoader\";\n\n/**\n * LoadersRegistry\n * loaders can define a static priority number. more high is priority, more important the loader is to be used first.\n */\nexport default class LoadersRegistry {\n  _loaders: Array<Class<WebGLTextureLoader<any>>> = [];\n\n  /**\n   * Add a TextureLoader class to extend texture format support.\n   */\n  add(loader: Class<WebGLTextureLoader<any>>) {\n    this._loaders.push(loader);\n    this._loaders.sort(\n      (a, b) =>\n        // $FlowFixMe\n        (typeof b.priority === \"number\" ? b.priority : 0) -\n        // $FlowFixMe\n        (typeof a.priority === \"number\" ? a.priority : 0)\n    );\n  }\n\n  /**\n   * Remove a previously added WebGLTextureLoader class.\n   */\n  remove(loader: Class<WebGLTextureLoader<any>>) {\n    const i = this._loaders.indexOf(loader);\n    if (i !== -1) {\n      this._loaders.splice(i, 1);\n    }\n  }\n\n  /**\n   * List the loaders ordered by most priority first\n   */\n  get() {\n    return this._loaders;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}